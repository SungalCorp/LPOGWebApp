{"ast":null,"code":"var _jsxFileName = \"/Users/kevinchen/Documents/Projects/LPOGWebApp/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useCallback, useEffect, useState } from 'react';\n// // import NewExpense from './components/NewExpense/NewExpense';\n// import Store from './components/Store';\n\n// var logoImage = require('../src/imgs/LIVINGPOG.png')\n// var SungalImage = require('../src/imgs/SUNGAL.png')\n\n// const App = () => {\n\n// // fetch data\n//   const [planogram, setPlanogram] = useState([])\n//   const [isLoading, setIsloading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const transformPOGData = (data) =>{\n\n//     if (data.length === 0)return []\n\n//     let storeData = [], gondolaList = [], shelfList = []\n//     let currGondolaID = data[0][\"displayfixtureID\"]\n//     let currShelfID =   data[0][\"shelfID\"]\n\n//     // go through facings, placing them in groupings \n//     // according to gondola and shelf\n//     for (var facing of data) {\n\n//       if (facing[\"shelfID\"]!== currShelfID){\n//         gondolaList.push(shelfList)\n//         shelfList=[]\n//       }\n\n//       if (facing[\"displayfixtureID\"]!== currGondolaID){\n//         storeData.push(gondolaList)\n//         gondolaList=[]\n//       }\n\n//       currGondolaID = facing[\"displayfixtureID\"]\n//       currShelfID = facing[\"shelfID\"]\n\n//       shelfList.push(facing)\n//     }\n\n//     gondolaList.push(shelfList)\n//     storeData.push(gondolaList)\n\n//     return storeData\n//   }\n\n//   const fetchPlanogramsHandler = useCallback(async () => {\n//     setIsloading(true);\n//     setError(null);\n//     try {\n//       // const url = 'https://apiserver.sungalcorp.synology.me/dbGet_displaymatrixforweb?filter=storeID=7'\n//       const url = 'https://apiserver.sungalcorp.synology.me/dbGet_displaymatrixforweb'\n//       const response = await fetch(url);\n\n//       if (!response.ok) {\n//         throw new Error('Something went wrong!');\n//       }\n//       const POGfacings =  await response.json();\n//       console.log(\"POGfacings =\",POGfacings)      \n//       let POGdata = transformPOGData(POGfacings)\n\n//     setPlanogram(POGdata);\n\n//     } catch (error) {\n//       setError(error.message);\n//     }\n//     setIsloading(false);\n//   }, []);\n\n//   useEffect(() => {\n//     fetchPlanogramsHandler();\n//   }, [fetchPlanogramsHandler]);\n\n//   let content = <p>Found no planograms.</p>;\n\n//   if (planogram.length > 0) {\n//     content = <Store gondolas={planogram} />;\n//   }\n\n//   if (error) {\n//     content = <p>{error}</p>;\n//   }\n\n//   if (isLoading) {\n//     content = <p>Loading...</p>;\n//   }\n\n//   return (\n//     <React.Fragment>\n\n//       {/* <section >\n//         <button onClick={fetchPlanogramsHandler}>Refresh</button>\n//       </section>\n//         */}\n//       <div >\n//       <img  \n//             className=\"logo_img\" \n//             src={logoImage}\n//             alt = 'LogoImg'\n//             /> \n//       <img  \n//             className=\"sungal_img\" \n//             src={SungalImage} \n//             alt = 'SungalImg'\n//             /> \n\n//       </div>\n\n//       <section>\n//         {content}\n//       </section>\n\n//     </React.Fragment>\n//   )\n\n// }\n\n// export default App;\nimport { Link, Routes, Route, useNavigate } from 'react-router-dom';\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n// import \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    navigate('/pages/Product');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          autoFocus: true,\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        block: \"true\",\n        size: \"lg\",\n        type: \"submit\",\n        disabled: !validateForm(),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"rIjyA2uJXTJXGlQGcq/HSho2Mo8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Link","Routes","Route","useNavigate","React","useState","Form","Button","Login","email","setEmail","password","setPassword","navigate","validateForm","length","handleSubmit","event","preventDefault","e","target","value"],"sources":["/Users/kevinchen/Documents/Projects/LPOGWebApp/src/App.js"],"sourcesContent":["// import React, { useCallback, useEffect, useState } from 'react';\n// // import NewExpense from './components/NewExpense/NewExpense';\n// import Store from './components/Store';\n\n// var logoImage = require('../src/imgs/LIVINGPOG.png')\n// var SungalImage = require('../src/imgs/SUNGAL.png')\n\n\n\n// const App = () => {\n\n\n// // fetch data\n//   const [planogram, setPlanogram] = useState([])\n//   const [isLoading, setIsloading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const transformPOGData = (data) =>{\n\n//     if (data.length === 0)return []\n\n//     let storeData = [], gondolaList = [], shelfList = []\n//     let currGondolaID = data[0][\"displayfixtureID\"]\n//     let currShelfID =   data[0][\"shelfID\"]\n\n//     // go through facings, placing them in groupings \n//     // according to gondola and shelf\n//     for (var facing of data) {\n      \n//       if (facing[\"shelfID\"]!== currShelfID){\n//         gondolaList.push(shelfList)\n//         shelfList=[]\n//       }\n\n//       if (facing[\"displayfixtureID\"]!== currGondolaID){\n//         storeData.push(gondolaList)\n//         gondolaList=[]\n//       }\n     \n//       currGondolaID = facing[\"displayfixtureID\"]\n//       currShelfID = facing[\"shelfID\"]\n\n//       shelfList.push(facing)\n//     }\n\n//     gondolaList.push(shelfList)\n//     storeData.push(gondolaList)\n    \n//     return storeData\n//   }\n\n\n\n//   const fetchPlanogramsHandler = useCallback(async () => {\n//     setIsloading(true);\n//     setError(null);\n//     try {\n//       // const url = 'https://apiserver.sungalcorp.synology.me/dbGet_displaymatrixforweb?filter=storeID=7'\n//       const url = 'https://apiserver.sungalcorp.synology.me/dbGet_displaymatrixforweb'\n//       const response = await fetch(url);\n\n//       if (!response.ok) {\n//         throw new Error('Something went wrong!');\n//       }\n//       const POGfacings =  await response.json();\n//       console.log(\"POGfacings =\",POGfacings)      \n//       let POGdata = transformPOGData(POGfacings)\n\n//     setPlanogram(POGdata);\n\n//     } catch (error) {\n//       setError(error.message);\n//     }\n//     setIsloading(false);\n//   }, []);\n\n//   useEffect(() => {\n//     fetchPlanogramsHandler();\n//   }, [fetchPlanogramsHandler]);\n\n\n\n\n\n//   let content = <p>Found no planograms.</p>;\n\n//   if (planogram.length > 0) {\n//     content = <Store gondolas={planogram} />;\n//   }\n\n//   if (error) {\n//     content = <p>{error}</p>;\n//   }\n\n//   if (isLoading) {\n//     content = <p>Loading...</p>;\n//   }\n\n\n\n\n\n//   return (\n//     <React.Fragment>\n\n//       {/* <section >\n//         <button onClick={fetchPlanogramsHandler}>Refresh</button>\n//       </section>\n//         */}\n//       <div >\n//       <img  \n//             className=\"logo_img\" \n//             src={logoImage}\n//             alt = 'LogoImg'\n//             /> \n//       <img  \n//             className=\"sungal_img\" \n//             src={SungalImage} \n//             alt = 'SungalImg'\n//             /> \n\n//       </div>\n      \n\n//       <section>\n//         {content}\n//       </section>\n     \n//     </React.Fragment>\n//   )\n\n// }\n\n// export default App;\nimport {Link, Routes, Route, useNavigate} from 'react-router-dom';\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n// import \"./Login.css\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    navigate('/pages/Product');\n  }\n\n  return (\n    <div className=\"Login\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Group size=\"lg\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Button block=\"true\" size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n          Login\n        </Button>\n      </Form>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}