{"ast":null,"code":"'use strict';\n\nvar getPrefix = require('./getPrefix');\nvar forcePrefixed = require('./forcePrefixed');\nvar el = require('./el');\nvar MEMORY = {};\nvar STYLE;\nvar ELEMENT;\nmodule.exports = function (key, value, force) {\n  ELEMENT = ELEMENT || el();\n  STYLE = STYLE || ELEMENT.style;\n  var k = key + ': ' + value;\n  if (MEMORY[k]) {\n    return MEMORY[k];\n  }\n  var prefix;\n  var prefixed;\n  var prefixedValue;\n  if (force || !(key in STYLE)) {\n    prefix = getPrefix('appearance');\n    if (prefix) {\n      prefixed = forcePrefixed(key, value);\n      prefixedValue = '-' + prefix.toLowerCase() + '-' + value;\n      if (prefixed in STYLE) {\n        ELEMENT.style[prefixed] = '';\n        ELEMENT.style[prefixed] = prefixedValue;\n        if (ELEMENT.style[prefixed] !== '') {\n          value = prefixedValue;\n        }\n      }\n    }\n  }\n  MEMORY[k] = value;\n  return value;\n};","map":{"version":3,"names":["getPrefix","require","forcePrefixed","el","MEMORY","STYLE","ELEMENT","module","exports","key","value","force","style","k","prefix","prefixed","prefixedValue","toLowerCase"],"sources":["/Users/kevinchen/Desktop/LPOGWebApp/node_modules/react-style-normalizer/src/getCssPrefixedValue.js"],"sourcesContent":["'use strict';\n\nvar getPrefix     = require('./getPrefix')\nvar forcePrefixed = require('./forcePrefixed')\nvar el            = require('./el')\n\nvar MEMORY = {}\nvar STYLE\nvar ELEMENT\n\nmodule.exports = function(key, value, force){\n\n    ELEMENT = ELEMENT || el()\n    STYLE   = STYLE   ||  ELEMENT.style\n\n    var k = key + ': ' + value\n\n    if (MEMORY[k]){\n        return MEMORY[k]\n    }\n\n    var prefix\n    var prefixed\n    var prefixedValue\n\n    if (force || !(key in STYLE)){\n\n        prefix = getPrefix('appearance')\n\n        if (prefix){\n            prefixed = forcePrefixed(key, value)\n\n            prefixedValue = '-' + prefix.toLowerCase() + '-' + value\n\n            if (prefixed in STYLE){\n                ELEMENT.style[prefixed] = ''\n                ELEMENT.style[prefixed] = prefixedValue\n\n                if (ELEMENT.style[prefixed] !== ''){\n                    value = prefixedValue\n                }\n            }\n        }\n    }\n\n    MEMORY[k] = value\n\n    return value\n}"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,SAAS,GAAOC,OAAO,CAAC,aAAa,CAAC;AAC1C,IAAIC,aAAa,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAC9C,IAAIE,EAAE,GAAcF,OAAO,CAAC,MAAM,CAAC;AAEnC,IAAIG,MAAM,GAAG,CAAC,CAAC;AACf,IAAIC,KAAK;AACT,IAAIC,OAAO;AAEXC,MAAM,CAACC,OAAO,GAAG,UAASC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAC;EAExCL,OAAO,GAAGA,OAAO,IAAIH,EAAE,EAAE;EACzBE,KAAK,GAAKA,KAAK,IAAOC,OAAO,CAACM,KAAK;EAEnC,IAAIC,CAAC,GAAGJ,GAAG,GAAG,IAAI,GAAGC,KAAK;EAE1B,IAAIN,MAAM,CAACS,CAAC,CAAC,EAAC;IACV,OAAOT,MAAM,CAACS,CAAC,CAAC;EACpB;EAEA,IAAIC,MAAM;EACV,IAAIC,QAAQ;EACZ,IAAIC,aAAa;EAEjB,IAAIL,KAAK,IAAI,EAAEF,GAAG,IAAIJ,KAAK,CAAC,EAAC;IAEzBS,MAAM,GAAGd,SAAS,CAAC,YAAY,CAAC;IAEhC,IAAIc,MAAM,EAAC;MACPC,QAAQ,GAAGb,aAAa,CAACO,GAAG,EAAEC,KAAK,CAAC;MAEpCM,aAAa,GAAG,GAAG,GAAGF,MAAM,CAACG,WAAW,EAAE,GAAG,GAAG,GAAGP,KAAK;MAExD,IAAIK,QAAQ,IAAIV,KAAK,EAAC;QAClBC,OAAO,CAACM,KAAK,CAACG,QAAQ,CAAC,GAAG,EAAE;QAC5BT,OAAO,CAACM,KAAK,CAACG,QAAQ,CAAC,GAAGC,aAAa;QAEvC,IAAIV,OAAO,CAACM,KAAK,CAACG,QAAQ,CAAC,KAAK,EAAE,EAAC;UAC/BL,KAAK,GAAGM,aAAa;QACzB;MACJ;IACJ;EACJ;EAEAZ,MAAM,CAACS,CAAC,CAAC,GAAGH,KAAK;EAEjB,OAAOA,KAAK;AAChB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}