{"ast":null,"code":"var _jsxFileName = \"/Users/kevinchen/Desktop/LPOGWebApp/src/components/Facing.js\";\nimport React from 'react';\nimport './Facing.css';\n\n// const getPercentStyle = (percent) => {\n//   let styleObj = { backgroundColor: ''  };\n//   //alert(getPercentColor(percent))\n//   styleObj.backgroundColor = getPercentColor(percent);\n//   return styleObj;\n// };\n\n// export const getPercentColor = (percent) => {\n//   //alert(\"percent=\"+percent)\n//   let red = '#ff0000';\n//   let orange = '#ff9900';\n//   let yellow = '#fdfa06';\n//   let white = '#ffffff';\n//   let green = '#00ff00';\n//   let purple = '#ff00ff';\n\n//   if (isNaN(percent) || percent > 90){\n\n//     return white;\n//   } \n\n//   if (percent > 80) {\n\n//     return purple;\n//   }\n\n//   if (percent > 60) {\n\n//     return green;\n//   }\n\n//   if (percent > 40) {\n\n//     return yellow;\n//   }\n\n//   if (percent > 20) {\n\n//     return orange;\n//   }\n\n//   return red;\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Facing = props => {\n  console.log(props);\n  const facing = props.facing;\n  const getPercent = stateVal => {\n    try {\n      let valStr = (stateVal + '-').split('-')[0];\n      return Math.round((valStr.split('1').length - 1 / valStr.length) * 10) + '%';\n    } catch (err) {\n      return 'NA';\n    }\n  };\n  var prodPercentage = getPercent(facing.state);\n  var prodImage;\n  try {\n    prodImage = require('../imgs/' + facing.productUPC + '.png');\n  } catch (err) {\n    prodImage = require('../imgs/blackbox.png');\n    console.log(\"image not found error trapped\");\n  }\n\n  // var percentageStyle = getPercentStyle(prodPercentage);\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"facing-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"facing-info__upc\",\n      src: prodImage,\n      alt: \"ProductImg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"percentage\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"color\",\n        children: prodPercentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_c = Facing;\nexport default Facing;\nvar _c;\n$RefreshReg$(_c, \"Facing\");","map":{"version":3,"names":["React","Facing","props","console","log","facing","getPercent","stateVal","valStr","split","Math","round","length","err","prodPercentage","state","prodImage","require","productUPC"],"sources":["/Users/kevinchen/Desktop/LPOGWebApp/src/components/Facing.js"],"sourcesContent":["import React from 'react';\nimport './Facing.css';\n\n// const getPercentStyle = (percent) => {\n//   let styleObj = { backgroundColor: ''  };\n//   //alert(getPercentColor(percent))\n//   styleObj.backgroundColor = getPercentColor(percent);\n//   return styleObj;\n// };\n\n\n// export const getPercentColor = (percent) => {\n//   //alert(\"percent=\"+percent)\n//   let red = '#ff0000';\n//   let orange = '#ff9900';\n//   let yellow = '#fdfa06';\n//   let white = '#ffffff';\n//   let green = '#00ff00';\n//   let purple = '#ff00ff';\n\n//   if (isNaN(percent) || percent > 90){\n    \n//     return white;\n//   } \n  \n//   if (percent > 80) {\n    \n//     return purple;\n//   }\n\n//   if (percent > 60) {\n    \n//     return green;\n//   }\n\n//   if (percent > 40) {\n   \n//     return yellow;\n//   }\n\n//   if (percent > 20) {\n    \n//     return orange;\n//   }\n  \n//   return red;\n// };\n\nconst Facing = (props) => {\nconsole.log(props)\nconst facing = props.facing \n\nconst getPercent = (stateVal) => {\n  try {\n    let valStr = (stateVal + '-').split('-')[0];\n    return (\n      Math.round((valStr.split('1').length - 1 / valStr.length) * 10) + '%'\n    );\n  } catch (err) {\n    return ('NA');\n  }\n};\nvar prodPercentage = getPercent(facing.state) \n\nvar prodImage\n\ntry{\n  prodImage = require('../imgs/'+ facing.productUPC+'.png')\n}catch(err){\n  prodImage = require('../imgs/blackbox.png')\n  console.log(\"image not found error trapped\")\n}\n\n\n// var percentageStyle = getPercentStyle(prodPercentage);\n\n\n\n\n\nreturn (\n    <li className=\"facing-info\">\n    <img  \n         className=\"facing-info__upc\" \n         src={prodImage} \n         alt = 'ProductImg'\n    />\n  <div class=\"percentage\">\n  <div class=\"color\"  >{prodPercentage}</div>\n  </div>\n\n    </li>\n);\n\n\n\n\n};\nexport default Facing;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;;AAErB;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AAAA;AAEA,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAC1BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,MAAMG,MAAM,GAAGH,KAAK,CAACG,MAAM;EAE3B,MAAMC,UAAU,GAAIC,QAAQ,IAAK;IAC/B,IAAI;MACF,IAAIC,MAAM,GAAG,CAACD,QAAQ,GAAG,GAAG,EAAEE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC3C,OACEC,IAAI,CAACC,KAAK,CAAC,CAACH,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAACG,MAAM,GAAG,CAAC,GAAGJ,MAAM,CAACI,MAAM,IAAI,EAAE,CAAC,GAAG,GAAG;IAEzE,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,OAAQ,IAAI;IACd;EACF,CAAC;EACD,IAAIC,cAAc,GAAGR,UAAU,CAACD,MAAM,CAACU,KAAK,CAAC;EAE7C,IAAIC,SAAS;EAEb,IAAG;IACDA,SAAS,GAAGC,OAAO,CAAC,UAAU,GAAEZ,MAAM,CAACa,UAAU,GAAC,MAAM,CAAC;EAC3D,CAAC,QAAML,GAAG,EAAC;IACTG,SAAS,GAAGC,OAAO,CAAC,sBAAsB,CAAC;IAC3Cd,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;EAC9C;;EAGA;;EAMA,oBACI;IAAI,SAAS,EAAC,aAAa;IAAA,wBAC3B;MACK,SAAS,EAAC,kBAAkB;MAC5B,GAAG,EAAEY,SAAU;MACf,GAAG,EAAG;IAAY;MAAA;MAAA;MAAA;IAAA,QACrB,eACJ;MAAK,KAAK,EAAC,YAAY;MAAA,uBACvB;QAAK,KAAK,EAAC,OAAO;QAAA,UAAIF;MAAc;QAAA;QAAA;QAAA;MAAA;IAAO;MAAA;MAAA;MAAA;IAAA,QACrC;EAAA;IAAA;IAAA;IAAA;EAAA,QAEC;AAMT,CAAC;AAAC,KAjDIb,MAAM;AAkDZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}