{"ast":null,"code":"'use strict';\n\nvar camelize = require('./stringUtils/camelize');\nvar hyphenate = require('./stringUtils/hyphenate');\nvar toLowerFirst = require('./stringUtils/toLowerFirst');\nvar toUpperFirst = require('./stringUtils/toUpperFirst');\nvar prefixInfo = require('./prefixInfo');\nvar prefixProperties = require('./prefixProperties');\nvar docStyle = typeof document == 'undefined' ? {} : document.documentElement.style;\nmodule.exports = function (asStylePrefix) {\n  return function (name, config) {\n    config = config || {};\n    var styleName = toLowerFirst(camelize(name)),\n      cssName = hyphenate(name),\n      theName = asStylePrefix ? styleName : cssName,\n      thePrefix = prefixInfo.style ? asStylePrefix ? prefixInfo.style : prefixInfo.css : '';\n    if (styleName in docStyle) {\n      return config.asString ? theName : [theName];\n    }\n\n    //not a valid style name, so we'll return the value with a prefix\n\n    var upperCased = theName,\n      prefixProperty = prefixProperties[cssName],\n      result = [];\n    if (asStylePrefix) {\n      upperCased = toUpperFirst(theName);\n    }\n    if (typeof prefixProperty == 'function') {\n      var prefixedCss = prefixProperty(theName, thePrefix) || [];\n      if (prefixedCss && !Array.isArray(prefixedCss)) {\n        prefixedCss = [prefixedCss];\n      }\n      if (prefixedCss.length) {\n        prefixedCss = prefixedCss.map(function (property) {\n          return asStylePrefix ? toLowerFirst(camelize(property)) : hyphenate(property);\n        });\n      }\n      result = result.concat(prefixedCss);\n    }\n    if (thePrefix) {\n      result.push(thePrefix + upperCased);\n    }\n    result.push(theName);\n    if (config.asString || result.length == 1) {\n      return result[0];\n    }\n    return result;\n  };\n};","map":{"version":3,"names":["camelize","require","hyphenate","toLowerFirst","toUpperFirst","prefixInfo","prefixProperties","docStyle","document","documentElement","style","module","exports","asStylePrefix","name","config","styleName","cssName","theName","thePrefix","css","asString","upperCased","prefixProperty","result","prefixedCss","Array","isArray","length","map","property","concat","push"],"sources":["/Users/kevinchen/Desktop/LPOGWebApp/node_modules/to-style/src/prefixer.js"],"sourcesContent":["'use strict'\n\nvar camelize     = require('./stringUtils/camelize')\nvar hyphenate    = require('./stringUtils/hyphenate')\nvar toLowerFirst = require('./stringUtils/toLowerFirst')\nvar toUpperFirst = require('./stringUtils/toUpperFirst')\n\nvar prefixInfo = require('./prefixInfo')\nvar prefixProperties = require('./prefixProperties')\n\nvar docStyle = typeof document == 'undefined'?\n                {}:\n                document.documentElement.style\n\nmodule.exports = function(asStylePrefix){\n\n    return function(name, config){\n        config = config || {}\n\n        var styleName = toLowerFirst(camelize(name)),\n            cssName   = hyphenate(name),\n\n            theName   = asStylePrefix?\n                            styleName:\n                            cssName,\n\n            thePrefix = prefixInfo.style?\n                            asStylePrefix?\n                                prefixInfo.style:\n                                prefixInfo.css\n                            :\n                            ''\n\n        if ( styleName in docStyle ) {\n            return config.asString?\n                              theName :\n                            [ theName ]\n        }\n\n        //not a valid style name, so we'll return the value with a prefix\n\n        var upperCased     = theName,\n            prefixProperty = prefixProperties[cssName],\n            result         = []\n\n        if (asStylePrefix){\n            upperCased = toUpperFirst(theName)\n        }\n\n        if (typeof prefixProperty == 'function'){\n            var prefixedCss = prefixProperty(theName, thePrefix) || []\n            if (prefixedCss && !Array.isArray(prefixedCss)){\n                prefixedCss = [prefixedCss]\n            }\n\n            if (prefixedCss.length){\n                prefixedCss = prefixedCss.map(function(property){\n                    return asStylePrefix?\n                                toLowerFirst(camelize(property)):\n                                hyphenate(property)\n\n                })\n            }\n\n            result = result.concat(prefixedCss)\n        }\n\n        if (thePrefix){\n            result.push(thePrefix + upperCased)\n        }\n\n        result.push(theName)\n\n        if (config.asString || result.length == 1){\n            return result[0]\n        }\n\n        return result\n    }\n}"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,QAAQ,GAAOC,OAAO,CAAC,wBAAwB,CAAC;AACpD,IAAIC,SAAS,GAAMD,OAAO,CAAC,yBAAyB,CAAC;AACrD,IAAIE,YAAY,GAAGF,OAAO,CAAC,4BAA4B,CAAC;AACxD,IAAIG,YAAY,GAAGH,OAAO,CAAC,4BAA4B,CAAC;AAExD,IAAII,UAAU,GAAGJ,OAAO,CAAC,cAAc,CAAC;AACxC,IAAIK,gBAAgB,GAAGL,OAAO,CAAC,oBAAoB,CAAC;AAEpD,IAAIM,QAAQ,GAAG,OAAOC,QAAQ,IAAI,WAAW,GAC7B,CAAC,CAAC,GACFA,QAAQ,CAACC,eAAe,CAACC,KAAK;AAE9CC,MAAM,CAACC,OAAO,GAAG,UAASC,aAAa,EAAC;EAEpC,OAAO,UAASC,IAAI,EAAEC,MAAM,EAAC;IACzBA,MAAM,GAAGA,MAAM,IAAI,CAAC,CAAC;IAErB,IAAIC,SAAS,GAAGb,YAAY,CAACH,QAAQ,CAACc,IAAI,CAAC,CAAC;MACxCG,OAAO,GAAKf,SAAS,CAACY,IAAI,CAAC;MAE3BI,OAAO,GAAKL,aAAa,GACTG,SAAS,GACTC,OAAO;MAEvBE,SAAS,GAAGd,UAAU,CAACK,KAAK,GACZG,aAAa,GACTR,UAAU,CAACK,KAAK,GAChBL,UAAU,CAACe,GAAG,GAElB,EAAE;IAEtB,IAAKJ,SAAS,IAAIT,QAAQ,EAAG;MACzB,OAAOQ,MAAM,CAACM,QAAQ,GACJH,OAAO,GACT,CAAEA,OAAO,CAAE;IAC/B;;IAEA;;IAEA,IAAII,UAAU,GAAOJ,OAAO;MACxBK,cAAc,GAAGjB,gBAAgB,CAACW,OAAO,CAAC;MAC1CO,MAAM,GAAW,EAAE;IAEvB,IAAIX,aAAa,EAAC;MACdS,UAAU,GAAGlB,YAAY,CAACc,OAAO,CAAC;IACtC;IAEA,IAAI,OAAOK,cAAc,IAAI,UAAU,EAAC;MACpC,IAAIE,WAAW,GAAGF,cAAc,CAACL,OAAO,EAAEC,SAAS,CAAC,IAAI,EAAE;MAC1D,IAAIM,WAAW,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,WAAW,CAAC,EAAC;QAC3CA,WAAW,GAAG,CAACA,WAAW,CAAC;MAC/B;MAEA,IAAIA,WAAW,CAACG,MAAM,EAAC;QACnBH,WAAW,GAAGA,WAAW,CAACI,GAAG,CAAC,UAASC,QAAQ,EAAC;UAC5C,OAAOjB,aAAa,GACRV,YAAY,CAACH,QAAQ,CAAC8B,QAAQ,CAAC,CAAC,GAChC5B,SAAS,CAAC4B,QAAQ,CAAC;QAEnC,CAAC,CAAC;MACN;MAEAN,MAAM,GAAGA,MAAM,CAACO,MAAM,CAACN,WAAW,CAAC;IACvC;IAEA,IAAIN,SAAS,EAAC;MACVK,MAAM,CAACQ,IAAI,CAACb,SAAS,GAAGG,UAAU,CAAC;IACvC;IAEAE,MAAM,CAACQ,IAAI,CAACd,OAAO,CAAC;IAEpB,IAAIH,MAAM,CAACM,QAAQ,IAAIG,MAAM,CAACI,MAAM,IAAI,CAAC,EAAC;MACtC,OAAOJ,MAAM,CAAC,CAAC,CAAC;IACpB;IAEA,OAAOA,MAAM;EACjB,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}