{"ast":null,"code":"var _jsxFileName = \"/Users/kevinchen/Documents/Projects/LPOGWebApp /src/pages/Authentication.js\";\n// import { redirect } from 'react-router-dom';\n// import AuthForm from '../components/AuthForm';\n\n// let apiCallString = 'https://apiserver.sungalcorp.synology.me/dbGet_useraccounts'\n\n// function AuthenticationPage() {\n//     return <AuthForm />;\n// }\n\n// export default AuthenticationPage;\n\n// export async function action({request}) {\n//     const data = await request.formData();\n//     const authData = {\n//         username: data.get('username'),\n//         password: data.get('password'),\n//     };\n\n//     console.log(authData['username']);\n\n//     apiCallString += \"?filter=username='\" + authData['username'].trim() + \"'\"\n\n//     let userRecListRaw = await fetch(apiCallString);\n//     let userRecList =  await userRecListRaw.json();\n\n//     if (userRecList.length === 0) {\n//       alert('invalid user ID');\n//       return false;\n//     }\n\n//     let userRec = userRecList[0]\n\n//     if (userRec['password'].localeCompare(authData['password']) !== 0) {\n//       alert('invalid password');\n//       return false;\n//     }\n//     return redirect('/LivingPOG');\n//   }\n\nimport { redirect } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiEndpoint = 'https://apiserver.sungalcorp.synology.me/dbGet_useraccounts';\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action(_ref) {\n  let {\n    request\n  } = _ref;\n  const data = await request.formData();\n  const username = data.get('username').trim();\n  const password = data.get('password');\n  const userRecListRaw = await fetch(`${apiEndpoint}?filter=username='${username}'`);\n  const userRecList = await userRecListRaw.json();\n  if (userRecList.length === 0) {\n    alert('Invalid user ID');\n    return false;\n  }\n  const userRec = userRecList[0];\n  if (userRec.password !== password) {\n    alert('Invalid password');\n    return false;\n  }\n  return redirect('/LivingPOG');\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["redirect","AuthForm","apiEndpoint","AuthenticationPage","action","request","data","formData","username","get","trim","password","userRecListRaw","fetch","userRecList","json","length","alert","userRec"],"sources":["/Users/kevinchen/Documents/Projects/LPOGWebApp /src/pages/Authentication.js"],"sourcesContent":["// import { redirect } from 'react-router-dom';\n// import AuthForm from '../components/AuthForm';\n\n// let apiCallString = 'https://apiserver.sungalcorp.synology.me/dbGet_useraccounts'\n\n// function AuthenticationPage() {\n//     return <AuthForm />;\n// }\n\n// export default AuthenticationPage;\n\n// export async function action({request}) {\n//     const data = await request.formData();\n//     const authData = {\n//         username: data.get('username'),\n//         password: data.get('password'),\n//     };\n\n//     console.log(authData['username']);\n\n//     apiCallString += \"?filter=username='\" + authData['username'].trim() + \"'\"\n    \n//     let userRecListRaw = await fetch(apiCallString);\n//     let userRecList =  await userRecListRaw.json();\n\n//     if (userRecList.length === 0) {\n//       alert('invalid user ID');\n//       return false;\n//     }\n\n//     let userRec = userRecList[0]\n\n//     if (userRec['password'].localeCompare(authData['password']) !== 0) {\n//       alert('invalid password');\n//       return false;\n//     }\n//     return redirect('/LivingPOG');\n//   }\n\n\nimport { redirect } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\n\nconst apiEndpoint = 'https://apiserver.sungalcorp.synology.me/dbGet_useraccounts';\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport async function action({ request }) {\n  const data = await request.formData();\n  const username = data.get('username').trim();\n  const password = data.get('password');\n\n  const userRecListRaw = await fetch(`${apiEndpoint}?filter=username='${username}'`);\n  const userRecList = await userRecListRaw.json();\n\n  if (userRecList.length === 0) {\n    alert('Invalid user ID');\n    return false;\n  }\n\n  const userRec = userRecList[0];\n\n  if (userRec.password !== password) {\n    alert('Invalid password');\n    return false;\n  }\n\n  return redirect('/LivingPOG');\n}\n"],"mappings":";AAAA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,QAAQ,MAAM,wBAAwB;AAAC;AAE9C,MAAMC,WAAW,GAAG,6DAA6D;AAEjF,SAASC,kBAAkB,GAAG;EAC5B,oBAAO,QAAC,QAAQ;IAAA;IAAA;IAAA;EAAA,QAAG;AACrB;AAAC,KAFQA,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,eAAeC,MAAM,OAAc;EAAA,IAAb;IAAEC;EAAQ,CAAC;EACtC,MAAMC,IAAI,GAAG,MAAMD,OAAO,CAACE,QAAQ,EAAE;EACrC,MAAMC,QAAQ,GAAGF,IAAI,CAACG,GAAG,CAAC,UAAU,CAAC,CAACC,IAAI,EAAE;EAC5C,MAAMC,QAAQ,GAAGL,IAAI,CAACG,GAAG,CAAC,UAAU,CAAC;EAErC,MAAMG,cAAc,GAAG,MAAMC,KAAK,CAAE,GAAEX,WAAY,qBAAoBM,QAAS,GAAE,CAAC;EAClF,MAAMM,WAAW,GAAG,MAAMF,cAAc,CAACG,IAAI,EAAE;EAE/C,IAAID,WAAW,CAACE,MAAM,KAAK,CAAC,EAAE;IAC5BC,KAAK,CAAC,iBAAiB,CAAC;IACxB,OAAO,KAAK;EACd;EAEA,MAAMC,OAAO,GAAGJ,WAAW,CAAC,CAAC,CAAC;EAE9B,IAAII,OAAO,CAACP,QAAQ,KAAKA,QAAQ,EAAE;IACjCM,KAAK,CAAC,kBAAkB,CAAC;IACzB,OAAO,KAAK;EACd;EAEA,OAAOjB,QAAQ,CAAC,YAAY,CAAC;AAC/B;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}