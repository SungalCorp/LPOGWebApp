{"ast":null,"code":"var _jsxFileName = \"/Users/kevinchen/Documents/Projects/LPOGWebApp/src/components/Facing.js\";\nimport React from 'react';\nimport './Facing.css';\nimport Tooltip from \"./Tooltip\";\nimport 'react-tooltip/dist/react-tooltip.css';\n\n// const img_ServerUrl = 'https://imgserver.sungalcorp.synology.me/'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntry {\n  const img_ServerUrl = 'https://imgserver.sungalcorp.synology.me/';\n  const img_response = await fetch(img_ServerUrl);\n  if (!response.ok) {\n    throw new Error('Can not get imgs! Something went wrong!');\n  }\n  const POGimgs = await img_response.json();\n  console.log(\"imgs:\", POGimgs);\n} catch (error) {\n  setError(error.message);\n}\n;\nconst imageScalerShelfWidth = 48;\n// const imageScalerShelfHeight = 12\n\nconst getPercentStyle = percent => {\n  let styleObj = {\n    backgroundColor: ''\n  };\n  //alert(getPercentColor(percent))\n  styleObj.backgroundColor = getPercentColor(percent);\n  return styleObj;\n};\nconst getProductImageStyle = facing => {\n  let styleObj = {\n    width: '',\n    height: ''\n  };\n  styleObj.width = 95 * (facing.productWidth / imageScalerShelfWidth) + 'vw';\n  // styleObj.height = 100*(facing.productHeight/imageScalerShelfHeight)+'%';\n  return styleObj;\n};\nexport const getPercentColor = percent => {\n  //alert(\"percent=\"+percent)\n  percent = percent.replace(/%/g, '');\n  let red = '#ff0000';\n  let orange = '#ff9900';\n  let yellow = '#fdfa06';\n  let blue = '#0000FF';\n  let green = '#00ff00';\n  let purple = '#ff00ff';\n  if (isNaN(percent) || percent > 90) {\n    return purple;\n  }\n  if (percent > 85) {\n    return blue;\n  }\n  if (percent > 55) {\n    return green;\n  }\n  if (percent > 35) {\n    return yellow;\n  }\n  if (percent > 20) {\n    return orange;\n  }\n  return red;\n};\nconst Facing = props => {\n  console.log(props);\n  const facing = props.facing;\n  const getPercent = stateVal => {\n    try {\n      let valStr = (stateVal + '-').split('-')[0];\n      return Math.round((valStr.split('1').length - 1 / valStr.length) * 10) + '%';\n    } catch (err) {\n      return 'NA';\n    }\n  };\n  var prodPercentage = getPercent(facing.state);\n  var prodImage;\n  try {\n    prodImage = require('../imgs/' + facing.productUPC + '.png');\n    // prodImage = require('https://sungalcorp.synology.me:5001/fsdownload/FReldfZww/imgs/'+ facing.productUPC+'.png')\n  } catch (err) {\n    prodImage = require('../imgs/blackbox.png');\n    // prodImage = require('https://sungalcorp.synology.me:5001/fsdownload/FReldfZww/imgs/blackbox.png')\n    console.log(\"image not found error trapped\");\n  }\n  var percentageStyle = getPercentStyle(prodPercentage);\n  var productImageStyle = getProductImageStyle(facing);\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    content: facing.productName + \"     UPC:\" + facing.productUPC,\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"facing\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"facing_img\",\n        src: prodImage,\n        alt: \"ProductImg\",\n        style: productImageStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"percentage-tag\",\n        style: percentageStyle,\n        children: prodPercentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 1\n  }, this);\n};\n_c = Facing;\nexport default Facing;\nvar _c;\n$RefreshReg$(_c, \"Facing\");","map":{"version":3,"names":["React","Tooltip","img_ServerUrl","img_response","fetch","response","ok","Error","POGimgs","json","console","log","error","setError","message","imageScalerShelfWidth","getPercentStyle","percent","styleObj","backgroundColor","getPercentColor","getProductImageStyle","facing","width","height","productWidth","replace","red","orange","yellow","blue","green","purple","isNaN","Facing","props","getPercent","stateVal","valStr","split","Math","round","length","err","prodPercentage","state","prodImage","require","productUPC","percentageStyle","productImageStyle","productName"],"sources":["/Users/kevinchen/Documents/Projects/LPOGWebApp/src/components/Facing.js"],"sourcesContent":["import React from 'react';\nimport './Facing.css';\nimport Tooltip from \"./Tooltip\";\nimport 'react-tooltip/dist/react-tooltip.css'\n\n// const img_ServerUrl = 'https://imgserver.sungalcorp.synology.me/'\n\n\n      try {\n        const img_ServerUrl = 'https://imgserver.sungalcorp.synology.me/'\n        const img_response = await fetch(img_ServerUrl);\n      \n        if (!response.ok) {\n          throw new Error('Can not get imgs! Something went wrong!');\n        }\n        const POGimgs =  await img_response.json();\n        console.log(\"imgs:\",POGimgs)\n      \n      }catch (error) {\n        setError(error.message);\n      };\n\n\nconst imageScalerShelfWidth = 48;\n// const imageScalerShelfHeight = 12\n\nconst getPercentStyle = (percent) => {\n  let styleObj = { backgroundColor: '',\n   };\n  //alert(getPercentColor(percent))\n  styleObj.backgroundColor = getPercentColor(percent);\n  return styleObj;\n};\nconst getProductImageStyle = (facing) => {\n  let styleObj = { width: '', height: ''}\n  styleObj.width = 95*(facing.productWidth /imageScalerShelfWidth)+'vw';\n  // styleObj.height = 100*(facing.productHeight/imageScalerShelfHeight)+'%';\n  return styleObj;\n}\nexport const getPercentColor = (percent) => {\n  //alert(\"percent=\"+percent)\n  percent = percent.replace(/%/g, '');\n  let red = '#ff0000';\n  let orange = '#ff9900';\n  let yellow = '#fdfa06';\n  let blue = '#0000FF';\n  let green = '#00ff00';\n  let purple = '#ff00ff';\n  if (isNaN(percent) || percent > 90){\n    return purple;\n  } \n  if (percent > 85) {\n    return blue;\n  }\n  if (percent > 55) {\n    return green;\n  }\n  if (percent > 35) {\n    return yellow;\n  }\n  if (percent > 20) {\n    return orange;\n  }\n  return red;\n};\n\nconst Facing = (props) => {\nconsole.log(props)\nconst facing = props.facing \n\nconst getPercent = (stateVal) => {\n  try {\n    let valStr = (stateVal + '-').split('-')[0];\n    return (\n      Math.round((valStr.split('1').length - 1 / valStr.length) * 10) + '%'\n    );\n  } catch (err) {\n    return ('NA');\n  }\n};\n\nvar prodPercentage = getPercent(facing.state) \nvar prodImage\n\ntry{\n  prodImage = require('../imgs/'+facing.productUPC+'.png')\n  // prodImage = require('https://sungalcorp.synology.me:5001/fsdownload/FReldfZww/imgs/'+ facing.productUPC+'.png')\n}catch(err){\n  prodImage = require('../imgs/blackbox.png')\n  // prodImage = require('https://sungalcorp.synology.me:5001/fsdownload/FReldfZww/imgs/blackbox.png')\n  console.log(\"image not found error trapped\")\n}\n\nvar percentageStyle = getPercentStyle(prodPercentage);\nvar productImageStyle = getProductImageStyle(facing);\n\n\nreturn (\n<Tooltip content={facing.productName+\"     UPC:\"+facing.productUPC}>\n      <li className=\"facing\"  >\n        <img  \n            className=\"facing_img\" \n            src={prodImage} \n            alt = 'ProductImg'\n            style={productImageStyle}\n        />\n        <div className=\"percentage-tag\" style={percentageStyle}>\n          {prodPercentage}\n        </div>\n      </li>\n  </Tooltip>\n);\n};\nexport default Facing;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}