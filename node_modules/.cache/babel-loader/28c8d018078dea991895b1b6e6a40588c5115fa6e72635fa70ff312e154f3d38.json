{"ast":null,"code":"var _jsxFileName = \"/Users/kevinchen/Documents/Projects/LPOGWebApp/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\n// import NewExpense from './components/NewExpense/NewExpense';\nimport Store from './components/Store';\nimport { Login } from \"./Login\";\nimport { Register } from \"./Register\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar logoImage = require('../src/LIVINGPOG.png');\nvar SungalImage = require('../src/SUNGAL.png');\nconst App = () => {\n  _s();\n  const [currentForm, setCurrentForm] = useState('login');\n  const toggleForm = formName => {\n    setCurrentForm(formName);\n  };\n  const [currentPage, setCurrentPage] = useState({});\n  const togglePage = pageName => {\n    setCurrentPage(pageName);\n  };\n  const [planogram, setPlanogram] = useState([]);\n  const [isLoading, setIsloading] = useState(false);\n  const [error, setError] = useState(null);\n  const transformPOGData = data => {\n    if (data.length === 0) return [];\n    let storeData = [],\n      gondolaList = [],\n      shelfList = [];\n    let currGondolaID = data[0][\"displayfixtureID\"];\n    let currShelfID = data[0][\"shelfID\"];\n\n    // go through facings, placing them in groupings \n    // according to gondola and shelf\n    for (var facing of data) {\n      if (facing[\"shelfID\"] !== currShelfID) {\n        gondolaList.push(shelfList);\n        shelfList = [];\n      }\n      if (facing[\"displayfixtureID\"] !== currGondolaID) {\n        storeData.push(gondolaList);\n        gondolaList = [];\n      }\n      currGondolaID = facing[\"displayfixtureID\"];\n      currShelfID = facing[\"shelfID\"];\n      shelfList.push(facing);\n    }\n    gondolaList.push(shelfList);\n    storeData.push(gondolaList);\n    return storeData;\n  };\n  const fetchPlanogramsHandler = useCallback(async () => {\n    setIsloading(true);\n    setError(null);\n    try {\n      const url = 'https://apiserver.sungalcorp.synology.me/dbGet_displaymatrixforweb?filter=storeID=7';\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const POGfacings = await response.json();\n      console.log(\"POGfacings =\", POGfacings);\n      let POGdata = transformPOGData(POGfacings);\n      setPlanogram(POGdata);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsloading(false);\n  }, []);\n  useEffect(() => {\n    fetchPlanogramsHandler();\n  }, [fetchPlanogramsHandler]);\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no planograms.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 17\n  }, this);\n  if (planogram.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(Store, {\n      gondolas: planogram\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchPlanogramsHandler,\n        children: \"FetchPlanogram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"logo_img\",\n        src: logoImage,\n        alt: \"LogoImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"sungal_img\",\n        src: SungalImage,\n        alt: \"SungalImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: currentForm === \"login\" ? /*#__PURE__*/_jsxDEV(Login, {\n        onFormSwitch: toggleForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 37\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onFormSwitch: toggleForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 74\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"QSeyn7bR1DNm+rjtTyYxMz9ANlA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","Store","Login","Register","logoImage","require","SungalImage","App","currentForm","setCurrentForm","toggleForm","formName","currentPage","setCurrentPage","togglePage","pageName","planogram","setPlanogram","isLoading","setIsloading","error","setError","transformPOGData","data","length","storeData","gondolaList","shelfList","currGondolaID","currShelfID","facing","push","fetchPlanogramsHandler","url","response","fetch","ok","Error","POGfacings","json","console","log","POGdata","message","content"],"sources":["/Users/kevinchen/Documents/Projects/LPOGWebApp/src/App.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\n// import NewExpense from './components/NewExpense/NewExpense';\nimport Store from './components/Store';\n\nimport { Login } from \"./Login\";\nimport { Register } from \"./Register\";\n\n\nvar logoImage = require('../src/LIVINGPOG.png')\nvar SungalImage = require('../src/SUNGAL.png')\n\nconst App = () => {\n\n\n\n  const [currentForm, setCurrentForm] = useState('login');\n  const toggleForm = (formName) => {\n    setCurrentForm(formName);\n  }\n\n  const [currentPage, setCurrentPage] = useState({})\n  const togglePage = (pageName) => {\n    setCurrentPage(pageName);\n  }\n\n\n  const [planogram, setPlanogram] = useState([])\n  const [isLoading, setIsloading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const transformPOGData = (data) =>{\n\n    if (data.length === 0)return []\n\n    let storeData = [], gondolaList = [], shelfList = []\n    let currGondolaID = data[0][\"displayfixtureID\"]\n    let currShelfID =   data[0][\"shelfID\"]\n\n    // go through facings, placing them in groupings \n    // according to gondola and shelf\n    for (var facing of data) {\n      \n      if (facing[\"shelfID\"]!== currShelfID){\n        gondolaList.push(shelfList)\n        shelfList=[]\n      }\n\n      if (facing[\"displayfixtureID\"]!== currGondolaID){\n        storeData.push(gondolaList)\n        gondolaList=[]\n      }\n     \n      currGondolaID = facing[\"displayfixtureID\"]\n      currShelfID = facing[\"shelfID\"]\n\n      shelfList.push(facing)\n    }\n\n    gondolaList.push(shelfList)\n    storeData.push(gondolaList)\n    \n    return storeData\n  }\n\n  const fetchPlanogramsHandler = useCallback(async () => {\n    setIsloading(true);\n    setError(null);\n    try {\n      const url = 'https://apiserver.sungalcorp.synology.me/dbGet_displaymatrixforweb?filter=storeID=7'\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const POGfacings =  await response.json();\n      console.log(\"POGfacings =\",POGfacings)      \n      let POGdata = transformPOGData(POGfacings)\n\n    setPlanogram(POGdata);\n\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsloading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchPlanogramsHandler();\n  }, [fetchPlanogramsHandler]);\n\n  let content = <p>Found no planograms.</p>;\n\n  if (planogram.length > 0) {\n    content = <Store gondolas={planogram} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  return (\n    <React.Fragment>\n\n      <section>\n        <button onClick={fetchPlanogramsHandler}>FetchPlanogram</button>\n      </section>\n       \n      <div >\n      <img  \n            className=\"logo_img\" \n            src={logoImage} \n            alt = 'LogoImg'\n            /> \n      <img  \n            className=\"sungal_img\" \n            src={SungalImage} \n            alt = 'SungalImg'\n            /> \n\n      </div>\n      \n      <section>\n      \n        {\n          currentForm === \"login\" ? <Login onFormSwitch={toggleForm} /> :<Register onFormSwitch={toggleForm}/>\n        }\n      </section>\n     \n    </React.Fragment>\n  )\n\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}