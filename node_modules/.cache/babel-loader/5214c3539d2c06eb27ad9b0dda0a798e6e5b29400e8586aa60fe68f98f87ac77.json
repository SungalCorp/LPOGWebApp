{"ast":null,"code":"'use strict';\n\nvar toUpperFirst = require('./toUpperFirst');\nvar getPrefix = require('./getPrefix');\nvar properties = require('./prefixProps');\n\n/**\n * Returns the given key prefixed, if the property is found in the prefixProps map.\n *\n * Does not test if the property supports the given value unprefixed.\n * If you need this, use './getPrefixed' instead\n */\nmodule.exports = function (key, value) {\n  if (!properties[key]) {\n    return key;\n  }\n  var prefix = getPrefix(key);\n  return prefix ? prefix + toUpperFirst(key) : key;\n};","map":{"version":3,"names":["toUpperFirst","require","getPrefix","properties","module","exports","key","value","prefix"],"sources":["/Users/kevinchen/Desktop/LPOGWebApp/node_modules/react-style-normalizer/src/forcePrefixed.js"],"sourcesContent":["'use strict';\n\nvar toUpperFirst = require('./toUpperFirst')\nvar getPrefix    = require('./getPrefix')\nvar properties   = require('./prefixProps')\n\n/**\n * Returns the given key prefixed, if the property is found in the prefixProps map.\n *\n * Does not test if the property supports the given value unprefixed.\n * If you need this, use './getPrefixed' instead\n */\nmodule.exports = function(key, value){\n\n\tif (!properties[key]){\n\t\treturn key\n\t}\n\n\tvar prefix = getPrefix(key)\n\n\treturn prefix?\n\t\t\t\tprefix + toUpperFirst(key):\n\t\t\t\tkey\n}"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAC5C,IAAIC,SAAS,GAAMD,OAAO,CAAC,aAAa,CAAC;AACzC,IAAIE,UAAU,GAAKF,OAAO,CAAC,eAAe,CAAC;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACAG,MAAM,CAACC,OAAO,GAAG,UAASC,GAAG,EAAEC,KAAK,EAAC;EAEpC,IAAI,CAACJ,UAAU,CAACG,GAAG,CAAC,EAAC;IACpB,OAAOA,GAAG;EACX;EAEA,IAAIE,MAAM,GAAGN,SAAS,CAACI,GAAG,CAAC;EAE3B,OAAOE,MAAM,GACVA,MAAM,GAAGR,YAAY,CAACM,GAAG,CAAC,GAC1BA,GAAG;AACP,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}