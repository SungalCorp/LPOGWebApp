{"ast":null,"code":"var _jsxFileName = \"/Users/kevinchen/Documents/Projects/LPOGWebApp/src/pages/Authentication.js\";\nimport { json, redirect } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action(_ref) {\n  let {\n    request\n  } = _ref;\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  const response = await fetch('https://apiserver.sungalcorp.synology.me/dbGet_useraccounts', {\n    method: 'POST',\n    header: {\n      'Content_Type': 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could not authenticate user.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/product');\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["json","redirect","AuthForm","AuthenticationPage","action","request","data","formData","authData","email","get","password","response","fetch","method","header","body","JSON","stringify","status","ok","message"],"sources":["/Users/kevinchen/Documents/Projects/LPOGWebApp/src/pages/Authentication.js"],"sourcesContent":["import { json, redirect } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\n\nfunction AuthenticationPage() {\n    return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport async function action({request}) {\n    const data = await request.formData();\n    const authData = {\n        email: data.get('email'),\n        password: data.get('password'),\n    };\n\n    const response = await fetch('https://apiserver.sungalcorp.synology.me/dbGet_useraccounts' , {\n        method: 'POST',\n        header:{\n            'Content_Type': 'application/json'\n        },\n        body: JSON.stringify(authData)\n    });\n\n    if (response.status === 422 || response.status === 401 ) {\n        return response;\n    }\n    if (!response.ok) {\n        throw json({message: 'Could not authenticate user.' }, { status: 500});\n    }\n\n    return redirect('/product')\n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAAC;AAE9C,SAASC,kBAAkB,GAAG;EAC1B,oBAAO,QAAC,QAAQ;IAAA;IAAA;IAAA;EAAA,QAAG;AACvB;AAAC,KAFQA,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,eAAeC,MAAM,OAAY;EAAA,IAAX;IAACC;EAAO,CAAC;EAClC,MAAMC,IAAI,GAAG,MAAMD,OAAO,CAACE,QAAQ,EAAE;EACrC,MAAMC,QAAQ,GAAG;IACbC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,QAAQ,EAAEL,IAAI,CAACI,GAAG,CAAC,UAAU;EACjC,CAAC;EAED,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,6DAA6D,EAAG;IACzFC,MAAM,EAAE,MAAM;IACdC,MAAM,EAAC;MACH,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,QAAQ;EACjC,CAAC,CAAC;EAEF,IAAII,QAAQ,CAACO,MAAM,KAAK,GAAG,IAAIP,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAG;IACrD,OAAOP,QAAQ;EACnB;EACA,IAAI,CAACA,QAAQ,CAACQ,EAAE,EAAE;IACd,MAAMpB,IAAI,CAAC;MAACqB,OAAO,EAAE;IAA+B,CAAC,EAAE;MAAEF,MAAM,EAAE;IAAG,CAAC,CAAC;EAC1E;EAEA,OAAOlB,QAAQ,CAAC,UAAU,CAAC;AAC/B;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}