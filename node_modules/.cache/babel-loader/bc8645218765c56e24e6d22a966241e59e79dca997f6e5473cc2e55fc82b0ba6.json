{"ast":null,"code":"var _jsxFileName = \"/Users/kevinchen/Documents/Projects/LPOGWebApp/src/components/Facing.js\";\nimport React from 'react';\nimport './Facing.css';\nimport Tooltip from \"./Tooltip\";\nimport 'react-tooltip/dist/react-tooltip.css';\n// import { ErrorBoundary } from \"react-error-boundary\";\nimport { getPercent } from \"../lib/Percentage\";\nimport { getPercentColor } from '../lib/PercentColor';\nimport { getProductImageStyle } from '../lib/ProductImageStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageScalerShelfWidth = 48;\n// const imageScalerShelfHeight = 12\n\nconst getPercentStyle = percent => {\n  let styleObj = {\n    backgroundColor: ''\n  };\n  //alert(getPercentColor(percent))\n  styleObj.backgroundColor = getPercentColor(percent);\n  return styleObj;\n};\n// const getProductImageStyle = (facing) => {\n//   let styleObj = { width: '', height: ''}\n//   styleObj.width = 95*(facing.productWidth /imageScalerShelfWidth)+'vw';\n//   // styleObj.height = 100*(facing.productHeight/imageScalerShelfHeight)+'%';\n//   return styleObj;\n// }\n// export const getPercentColor = (percent) => {\n//   //alert(\"percent=\"+percent)\n//   percent = percent.replace(/%/g, '');\n//   let red = '#ff0000';\n//   let orange = '#ff9900';\n//   let yellow = '#fdfa06';\n//   let blue = '#0000FF';\n//   let green = '#00ff00';\n//   let purple = '#ff00ff';\n//   if (isNaN(percent) || percent > 90){\n//     return purple;\n//   } \n//   if (percent > 85) {\n//     return blue;\n//   }\n//   if (percent > 55) {\n//     return green;\n//   }\n//   if (percent > 35) {\n//     return yellow;\n//   }\n//   if (percent > 20) {\n//     return orange;\n//   }\n//   return red;\n// };\n\n// const getPercent = (stateVal) => {\n//   try {\n//     let valStr = (stateVal + '-').split('-')[0];\n//     return (\n//       Math.round((valStr.split('1').length - 1 / valStr.length) * 10) + '%'\n//     );\n//   } catch (err) {\n//     return ('NA');\n//   }\n// };\n\nconst Facing = props => {\n  console.log(props);\n  const facing = props.facing;\n  var prodPercentage = getPercent(facing.state);\n  var prodImage = 'https://imgserver.sungalcorp.synology.me/' + facing.productUPC + '.png';\n\n  // const fetchImg = async () => {\n\n  // try{\n  //   // prodImage = require('../imgs/'+facing.productUPC+'.png')\n  //   var prodImage = 'https://imgserver.sungalcorp.synology.me/'+facing.productUPC+'.png';\n  //   // var prodImage = fetch('https://imgserver.sungalcorp.synology.me/'+facing.productUPC+'.png');\n\n  // }catch(err){\n  //   // prodImage = require('../imgs/blackbox.png');\n  //   // prodImage = '../src/blackbox.png';\n  //   // prodImage = 'https://imgserver.sungalcorp.synology.me/blackbox.png'\n  //   console.log(\"image not found error trapped\")\n  //   return err;\n  // };\n  // };\n\n  var percentageStyle = getPercentStyle(prodPercentage);\n  var productImageStyle = getProductImageStyle(facing);\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    content: facing.productName + \"     UPC:\" + facing.productUPC,\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"facing\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"facing_img\",\n        src: prodImage,\n        alt: \"ProductImg\",\n        style: productImageStyle,\n        onError: e => {\n          e.target.src = \"https://imgserver.sungalcorp.synology.me/blackbox.png\";\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"percentage-tag\",\n        style: percentageStyle,\n        children: prodPercentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 1\n  }, this);\n};\n_c = Facing;\nexport default Facing;\nvar _c;\n$RefreshReg$(_c, \"Facing\");","map":{"version":3,"names":["React","Tooltip","getPercent","getPercentColor","getProductImageStyle","imageScalerShelfWidth","getPercentStyle","percent","styleObj","backgroundColor","Facing","props","console","log","facing","prodPercentage","state","prodImage","productUPC","percentageStyle","productImageStyle","productName","e","target","src"],"sources":["/Users/kevinchen/Documents/Projects/LPOGWebApp/src/components/Facing.js"],"sourcesContent":["import React from 'react';\nimport './Facing.css';\nimport Tooltip from \"./Tooltip\";\nimport 'react-tooltip/dist/react-tooltip.css';\n// import { ErrorBoundary } from \"react-error-boundary\";\nimport { getPercent } from \"../lib/Percentage\";\nimport { getPercentColor } from '../lib/PercentColor';\nimport { getProductImageStyle } from '../lib/ProductImageStyle';\n\nconst imageScalerShelfWidth = 48;\n// const imageScalerShelfHeight = 12\n\nconst getPercentStyle = (percent) => {\n  let styleObj = { backgroundColor: '',\n   };\n  //alert(getPercentColor(percent))\n  styleObj.backgroundColor = getPercentColor(percent);\n  return styleObj;\n};\n// const getProductImageStyle = (facing) => {\n//   let styleObj = { width: '', height: ''}\n//   styleObj.width = 95*(facing.productWidth /imageScalerShelfWidth)+'vw';\n//   // styleObj.height = 100*(facing.productHeight/imageScalerShelfHeight)+'%';\n//   return styleObj;\n// }\n// export const getPercentColor = (percent) => {\n//   //alert(\"percent=\"+percent)\n//   percent = percent.replace(/%/g, '');\n//   let red = '#ff0000';\n//   let orange = '#ff9900';\n//   let yellow = '#fdfa06';\n//   let blue = '#0000FF';\n//   let green = '#00ff00';\n//   let purple = '#ff00ff';\n//   if (isNaN(percent) || percent > 90){\n//     return purple;\n//   } \n//   if (percent > 85) {\n//     return blue;\n//   }\n//   if (percent > 55) {\n//     return green;\n//   }\n//   if (percent > 35) {\n//     return yellow;\n//   }\n//   if (percent > 20) {\n//     return orange;\n//   }\n//   return red;\n// };\n\n// const getPercent = (stateVal) => {\n//   try {\n//     let valStr = (stateVal + '-').split('-')[0];\n//     return (\n//       Math.round((valStr.split('1').length - 1 / valStr.length) * 10) + '%'\n//     );\n//   } catch (err) {\n//     return ('NA');\n//   }\n// };\n\nconst Facing = (props) => {\nconsole.log(props)\nconst facing = props.facing \n\n\n\nvar prodPercentage = getPercent(facing.state) \n\nvar prodImage = 'https://imgserver.sungalcorp.synology.me/'+facing.productUPC+'.png';\n\n\n\n// const fetchImg = async () => {\n\n// try{\n//   // prodImage = require('../imgs/'+facing.productUPC+'.png')\n//   var prodImage = 'https://imgserver.sungalcorp.synology.me/'+facing.productUPC+'.png';\n//   // var prodImage = fetch('https://imgserver.sungalcorp.synology.me/'+facing.productUPC+'.png');\n\n// }catch(err){\n//   // prodImage = require('../imgs/blackbox.png');\n//   // prodImage = '../src/blackbox.png';\n//   // prodImage = 'https://imgserver.sungalcorp.synology.me/blackbox.png'\n//   console.log(\"image not found error trapped\")\n//   return err;\n// };\n// };\n\nvar percentageStyle = getPercentStyle(prodPercentage);\nvar productImageStyle = getProductImageStyle(facing);\nreturn (\n\n<Tooltip content={facing.productName+\"     UPC:\"+facing.productUPC}>\n\n      <li className=\"facing\"  >\n\n        <img  \n            className=\"facing_img\" \n            src={prodImage} \n            alt = 'ProductImg'\n            style={productImageStyle}\n            onError={(e) =>\n                {e.target.src =\n                   \"https://imgserver.sungalcorp.synology.me/blackbox.png\"}\n            }\n        />\n\n        <div className=\"percentage-tag\" style={percentageStyle}>\n          {prodPercentage}\n\n        </div>\n\n      </li>\n\n  </Tooltip>\n\n);\n};\nexport default Facing;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,sCAAsC;AAC7C;AACA,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,eAAe,QAAQ,qBAAqB;AACrD,SAASC,oBAAoB,QAAQ,0BAA0B;AAAC;AAEhE,MAAMC,qBAAqB,GAAG,EAAE;AAChC;;AAEA,MAAMC,eAAe,GAAIC,OAAO,IAAK;EACnC,IAAIC,QAAQ,GAAG;IAAEC,eAAe,EAAE;EACjC,CAAC;EACF;EACAD,QAAQ,CAACC,eAAe,GAAGN,eAAe,CAACI,OAAO,CAAC;EACnD,OAAOC,QAAQ;AACjB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAME,MAAM,GAAIC,KAAK,IAAK;EAC1BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,MAAMG,MAAM,GAAGH,KAAK,CAACG,MAAM;EAI3B,IAAIC,cAAc,GAAGb,UAAU,CAACY,MAAM,CAACE,KAAK,CAAC;EAE7C,IAAIC,SAAS,GAAG,2CAA2C,GAACH,MAAM,CAACI,UAAU,GAAC,MAAM;;EAIpF;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIC,eAAe,GAAGb,eAAe,CAACS,cAAc,CAAC;EACrD,IAAIK,iBAAiB,GAAGhB,oBAAoB,CAACU,MAAM,CAAC;EACpD,oBAEA,QAAC,OAAO;IAAC,OAAO,EAAEA,MAAM,CAACO,WAAW,GAAC,WAAW,GAACP,MAAM,CAACI,UAAW;IAAA,uBAE7D;MAAI,SAAS,EAAC,QAAQ;MAAA,wBAEpB;QACI,SAAS,EAAC,YAAY;QACtB,GAAG,EAAED,SAAU;QACf,GAAG,EAAG,YAAY;QAClB,KAAK,EAAEG,iBAAkB;QACzB,OAAO,EAAGE,CAAC,IACP;UAACA,CAAC,CAACC,MAAM,CAACC,GAAG,GACV,uDAAuD;QAAA;MAC7D;QAAA;QAAA;QAAA;MAAA,QACH,eAEF;QAAK,SAAS,EAAC,gBAAgB;QAAC,KAAK,EAAEL,eAAgB;QAAA,UACpDJ;MAAc;QAAA;QAAA;QAAA;MAAA,QAEX;IAAA;MAAA;MAAA;MAAA;IAAA;EAEH;IAAA;IAAA;IAAA;EAAA,QAEC;AAGZ,CAAC;AAAC,KAzDIL,MAAM;AA0DZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}