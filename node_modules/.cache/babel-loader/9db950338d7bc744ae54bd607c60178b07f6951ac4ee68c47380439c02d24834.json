{"ast":null,"code":"'use strict';\n\nvar toUpperFirst = require('./toUpperFirst');\nvar getPrefix = require('./getPrefix');\nvar el = require('./el');\nvar MEMORY = {};\nvar STYLE;\nvar ELEMENT;\nvar PREFIX;\nmodule.exports = function (key, value) {\n  ELEMENT = ELEMENT || el();\n  STYLE = STYLE || ELEMENT.style;\n  var k = key; // + ': ' + value\n\n  if (MEMORY[k]) {\n    return MEMORY[k];\n  }\n  var prefix;\n  var prefixed;\n  if (!(key in STYLE)) {\n    //we have to prefix\n\n    // if (PREFIX){\n    //     prefix = PREFIX\n    // } else {\n    prefix = getPrefix('appearance');\n\n    //     if (prefix){\n    //         prefix = PREFIX = prefix.toLowerCase()\n    //     }\n    // }\n\n    if (prefix) {\n      prefixed = prefix + toUpperFirst(key);\n      if (prefixed in STYLE) {\n        key = prefixed;\n      }\n    }\n  }\n  MEMORY[k] = key;\n  return key;\n};","map":{"version":3,"names":["toUpperFirst","require","getPrefix","el","MEMORY","STYLE","ELEMENT","PREFIX","module","exports","key","value","style","k","prefix","prefixed"],"sources":["/Users/kevinchen/Desktop/LPOGWebApp/node_modules/react-style-normalizer/src/getStylePrefixed.js"],"sourcesContent":["'use strict';\n\nvar toUpperFirst = require('./toUpperFirst')\nvar getPrefix    = require('./getPrefix')\nvar el           = require('./el')\n\nvar MEMORY = {}\nvar STYLE\nvar ELEMENT\n\nvar PREFIX\n\nmodule.exports = function(key, value){\n\n    ELEMENT = ELEMENT || el()\n    STYLE   = STYLE   || ELEMENT.style\n\n    var k = key// + ': ' + value\n\n    if (MEMORY[k]){\n        return MEMORY[k]\n    }\n\n    var prefix\n    var prefixed\n\n    if (!(key in STYLE)){//we have to prefix\n\n        // if (PREFIX){\n        //     prefix = PREFIX\n        // } else {\n            prefix = getPrefix('appearance')\n\n        //     if (prefix){\n        //         prefix = PREFIX = prefix.toLowerCase()\n        //     }\n        // }\n\n        if (prefix){\n            prefixed = prefix + toUpperFirst(key)\n\n            if (prefixed in STYLE){\n                key = prefixed\n            }\n        }\n    }\n\n    MEMORY[k] = key\n\n    return key\n}"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAC5C,IAAIC,SAAS,GAAMD,OAAO,CAAC,aAAa,CAAC;AACzC,IAAIE,EAAE,GAAaF,OAAO,CAAC,MAAM,CAAC;AAElC,IAAIG,MAAM,GAAG,CAAC,CAAC;AACf,IAAIC,KAAK;AACT,IAAIC,OAAO;AAEX,IAAIC,MAAM;AAEVC,MAAM,CAACC,OAAO,GAAG,UAASC,GAAG,EAAEC,KAAK,EAAC;EAEjCL,OAAO,GAAGA,OAAO,IAAIH,EAAE,EAAE;EACzBE,KAAK,GAAKA,KAAK,IAAMC,OAAO,CAACM,KAAK;EAElC,IAAIC,CAAC,GAAGH,GAAG;;EAEX,IAAIN,MAAM,CAACS,CAAC,CAAC,EAAC;IACV,OAAOT,MAAM,CAACS,CAAC,CAAC;EACpB;EAEA,IAAIC,MAAM;EACV,IAAIC,QAAQ;EAEZ,IAAI,EAAEL,GAAG,IAAIL,KAAK,CAAC,EAAC;IAAC;;IAEjB;IACA;IACA;IACIS,MAAM,GAAGZ,SAAS,CAAC,YAAY,CAAC;;IAEpC;IACA;IACA;IACA;;IAEA,IAAIY,MAAM,EAAC;MACPC,QAAQ,GAAGD,MAAM,GAAGd,YAAY,CAACU,GAAG,CAAC;MAErC,IAAIK,QAAQ,IAAIV,KAAK,EAAC;QAClBK,GAAG,GAAGK,QAAQ;MAClB;IACJ;EACJ;EAEAX,MAAM,CAACS,CAAC,CAAC,GAAGH,GAAG;EAEf,OAAOA,GAAG;AACd,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}