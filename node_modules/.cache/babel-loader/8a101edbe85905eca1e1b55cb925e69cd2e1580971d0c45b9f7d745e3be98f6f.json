{"ast":null,"code":"var _jsxFileName = \"/Users/kevinchen/Desktop/LPOGWebApp/src/components/Facing.js\";\nimport React from 'react';\nimport './Facing.css';\nimport Tooltip from \"./Tooltip\";\nimport 'react-tooltip/dist/react-tooltip.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageScaler = 48;\nconst getPercentStyle = percent => {\n  let styleObj = {\n    backgroundColor: ''\n  };\n  //alert(getPercentColor(percent))\n  styleObj.backgroundColor = getPercentColor(percent);\n  return styleObj;\n};\nconst getPercentTagStyle = facing => {\n  let styleObj = {\n    width: ''\n  };\n  //alert(getPercentColor(percent))\n  styleObj.width = 100 * (facing.productWidth / imageScaler) + '%';\n  return styleObj;\n};\nconst getProductImageStyle = facing => {\n  let styleObj = {\n    width: '',\n    height: ''\n  };\n  styleObj.width = 100 * (facing.productWidth / imageScaler) + '%';\n  styleObj.height = 100 * (facing.productHeight / imageScaler) + '%';\n  return styleObj;\n};\nexport const getPercentColor = percent => {\n  //alert(\"percent=\"+percent)\n  percent = percent.replace(/%/g, '');\n  let red = '#ff0000';\n  let orange = '#ff9900';\n  let yellow = '#fdfa06';\n  let white = '#ffffff';\n  let green = '#00ff00';\n  let purple = '#ff00ff';\n  if (isNaN(percent) || percent > 90) {\n    return white;\n  }\n  if (percent > 80) {\n    return purple;\n  }\n  if (percent > 60) {\n    return green;\n  }\n  if (percent > 40) {\n    return yellow;\n  }\n  if (percent > 20) {\n    return orange;\n  }\n  return red;\n};\nconst Facing = props => {\n  console.log(props);\n  const facing = props.facing;\n  const getPercent = stateVal => {\n    try {\n      let valStr = (stateVal + '-').split('-')[0];\n      return Math.round((valStr.split('1').length - 1 / valStr.length) * 10) + '%';\n    } catch (err) {\n      return 'NA';\n    }\n  };\n  var prodPercentage = getPercent(facing.state);\n  var prodImage;\n  try {\n    prodImage = require('../imgs/' + facing.productUPC + '.png');\n    // prodImage = require('https://sungalcorp.synology.me:5001/fsdownload/FReldfZww/imgs/'+ facing.productUPC+'.png')\n  } catch (err) {\n    prodImage = require('../imgs/blackbox.png');\n    // prodImage = require('https://sungalcorp.synology.me:5001/fsdownload/FReldfZww/imgs/blackbox.png')\n    console.log(\"image not found error trapped\");\n  }\n  var percentageStyle = getPercentStyle(prodPercentage);\n  var productImageStyle = getProductImageStyle(facing);\n\n  // const mouseMove = () => {\n  //   console.log(prodPercentage,facing.productName)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    content: facing.productName + \"     UPC:\" + facing.productUPC,\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"facing\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"facing_img\",\n        src: prodImage,\n        alt: \"ProductImg\",\n        style: productImageStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"percentage-tag\",\n        style: percentageStyle,\n        children: prodPercentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 1\n  }, this);\n};\n_c = Facing;\nexport default Facing;\nvar _c;\n$RefreshReg$(_c, \"Facing\");","map":{"version":3,"names":["React","Tooltip","imageScaler","getPercentStyle","percent","styleObj","backgroundColor","getPercentColor","getPercentTagStyle","facing","width","productWidth","getProductImageStyle","height","productHeight","replace","red","orange","yellow","white","green","purple","isNaN","Facing","props","console","log","getPercent","stateVal","valStr","split","Math","round","length","err","prodPercentage","state","prodImage","require","productUPC","percentageStyle","productImageStyle","productName"],"sources":["/Users/kevinchen/Desktop/LPOGWebApp/src/components/Facing.js"],"sourcesContent":["import React from 'react';\nimport './Facing.css';\nimport Tooltip from \"./Tooltip\";\nimport 'react-tooltip/dist/react-tooltip.css'\n\nconst imageScaler = 48;\n\nconst getPercentStyle = (percent) => {\n  let styleObj = { backgroundColor: '',\n   };\n  //alert(getPercentColor(percent))\n  styleObj.backgroundColor = getPercentColor(percent);\n  return styleObj;\n};\n\nconst getPercentTagStyle = (facing) => {\n  let styleObj = { width: '',\n   };\n  //alert(getPercentColor(percent))\n  styleObj.width = 100*(facing.productWidth   / imageScaler)+'%';\n  return styleObj;\n};\n\n\nconst getProductImageStyle = (facing) => {\n  let styleObj = { width: '', height: ''}\n\n  styleObj.width = 100*(facing.productWidth   / imageScaler)+'%';\n  styleObj.height = 100*(facing.productHeight / imageScaler)+'%';\n\n  return styleObj;\n}\n\n\nexport const getPercentColor = (percent) => {\n  //alert(\"percent=\"+percent)\n  percent = percent.replace(/%/g, '');\n  let red = '#ff0000';\n  let orange = '#ff9900';\n  let yellow = '#fdfa06';\n  let white = '#ffffff';\n  let green = '#00ff00';\n  let purple = '#ff00ff';\n\n  if (isNaN(percent) || percent > 90){\n    \n    return white;\n  } \n  \n  if (percent > 80) {\n    \n    return purple;\n  }\n\n  if (percent > 60) {\n    \n    return green;\n  }\n\n  if (percent > 40) {\n   \n    return yellow;\n  }\n\n  if (percent > 20) {\n    \n    return orange;\n  }\n  \n  return red;\n};\n\nconst Facing = (props) => {\nconsole.log(props)\nconst facing = props.facing \n\nconst getPercent = (stateVal) => {\n  try {\n    let valStr = (stateVal + '-').split('-')[0];\n    return (\n      Math.round((valStr.split('1').length - 1 / valStr.length) * 10) + '%'\n    );\n  } catch (err) {\n    return ('NA');\n  }\n};\nvar prodPercentage = getPercent(facing.state) \n\nvar prodImage\n\ntry{\n  prodImage = require('../imgs/'+ facing.productUPC+'.png')\n  // prodImage = require('https://sungalcorp.synology.me:5001/fsdownload/FReldfZww/imgs/'+ facing.productUPC+'.png')\n}catch(err){\n  prodImage = require('../imgs/blackbox.png')\n  // prodImage = require('https://sungalcorp.synology.me:5001/fsdownload/FReldfZww/imgs/blackbox.png')\n  console.log(\"image not found error trapped\")\n}\n\n\nvar percentageStyle = getPercentStyle(prodPercentage);\n\nvar productImageStyle = getProductImageStyle(facing);\n\n\n// const mouseMove = () => {\n//   console.log(prodPercentage,facing.productName)\n// }\n\nreturn (\n\n<Tooltip content={facing.productName+\"     UPC:\"+facing.productUPC}>\n      <li className=\"facing\"  >\n        \n        <img  \n            className=\"facing_img\" \n            src={prodImage} \n            alt = 'ProductImg'\n            style={productImageStyle}\n        />\n        \n        \n        <div className=\"percentage-tag\" style={percentageStyle}>\n          \n          {prodPercentage}\n          {/* <div class=\"percentage-div\">\n              <div class=\"percentageBackground-div\" style={percentageStyle}>\n              \n              </div>\n              </div> */}\n        </div>\n        \n      </li>\n  </Tooltip>\n\n);\n};\nexport default Facing;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}