{"ast":null,"code":"'use strict';\n\nvar toStyleObject = require('./toStyleObject');\nvar hasOwn = require('./hasOwn');\n\n/**\n * @ignore\n * @method toStyleString\n *\n * @param  {Object} styles The object to convert to a style string.\n * @param  {Object} config\n * @param  {Boolean} config.addUnits=true True if you want to add units when numerical values are encountered. Defaults to true\n * @param  {Object}  config.cssUnitless An object whose keys represent css numerical property names that will not be appended with units.\n * @param  {Object}  config.prefixProperties An object whose keys represent css property names that should be prefixed\n * @param  {String}  config.cssUnit='px' The css unit to append to numerical values. Defaults to 'px'\n * @param  {String}  config.scope\n *\n * @return {Object} The object, normalized with css style names\n */\nmodule.exports = function (styles, config) {\n  styles = toStyleObject(styles, config);\n  var result = [];\n  var prop;\n  for (prop in styles) if (hasOwn(styles, prop)) {\n    result.push(prop + ': ' + styles[prop]);\n  }\n  return result.join('; ');\n};","map":{"version":3,"names":["toStyleObject","require","hasOwn","module","exports","styles","config","result","prop","push","join"],"sources":["/Users/kevinchen/Desktop/LPOGWebApp/node_modules/to-style/src/toStyleString.js"],"sourcesContent":["'use strict'\n\nvar toStyleObject = require('./toStyleObject')\nvar hasOwn        = require('./hasOwn')\n\n/**\n * @ignore\n * @method toStyleString\n *\n * @param  {Object} styles The object to convert to a style string.\n * @param  {Object} config\n * @param  {Boolean} config.addUnits=true True if you want to add units when numerical values are encountered. Defaults to true\n * @param  {Object}  config.cssUnitless An object whose keys represent css numerical property names that will not be appended with units.\n * @param  {Object}  config.prefixProperties An object whose keys represent css property names that should be prefixed\n * @param  {String}  config.cssUnit='px' The css unit to append to numerical values. Defaults to 'px'\n * @param  {String}  config.scope\n *\n * @return {Object} The object, normalized with css style names\n */\nmodule.exports = function(styles, config){\n    styles = toStyleObject(styles, config)\n\n    var result = []\n    var prop\n\n    for(prop in styles) if (hasOwn(styles, prop)){\n        result.push(prop + ': ' + styles[prop])\n    }\n\n    return result.join('; ')\n}"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC9C,IAAIC,MAAM,GAAUD,OAAO,CAAC,UAAU,CAAC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,MAAM,CAACC,OAAO,GAAG,UAASC,MAAM,EAAEC,MAAM,EAAC;EACrCD,MAAM,GAAGL,aAAa,CAACK,MAAM,EAAEC,MAAM,CAAC;EAEtC,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,IAAI;EAER,KAAIA,IAAI,IAAIH,MAAM,EAAE,IAAIH,MAAM,CAACG,MAAM,EAAEG,IAAI,CAAC,EAAC;IACzCD,MAAM,CAACE,IAAI,CAACD,IAAI,GAAG,IAAI,GAAGH,MAAM,CAACG,IAAI,CAAC,CAAC;EAC3C;EAEA,OAAOD,MAAM,CAACG,IAAI,CAAC,IAAI,CAAC;AAC5B,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}