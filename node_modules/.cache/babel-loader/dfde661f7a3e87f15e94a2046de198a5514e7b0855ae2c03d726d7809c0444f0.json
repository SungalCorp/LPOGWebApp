{"ast":null,"code":"var _jsxFileName = \"/Users/kevinchen/Desktop/LPOGWebApp/src/components/Facing.js\";\nimport React from 'react';\nimport './Facing.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getPercentStyle = percent => {\n  let styleObj = {\n    backgroundColor: ''\n  };\n  //alert(getPercentColor(percent))\n  styleObj.backgroundColor = getPercentColor(percent);\n  return styleObj;\n};\nexport const getPercentColor = percent => {\n  //alert(\"percent=\"+percent)\n  let red = '#ff0000';\n  let orange = '#ff9900';\n  let yellow = '#fdfa06';\n  let white = '#ffffff';\n  let green = '#00ff00';\n  let purple = '#ff00ff';\n  if (isNaN(percent) || percent > 90) {\n    return white;\n  }\n  if (percent > 80) {\n    return purple;\n  }\n  if (percent > 60) {\n    return green;\n  }\n  if (percent > 40) {\n    return yellow;\n  }\n  if (percent > 20) {\n    return orange;\n  }\n  return red;\n};\nconst Facing = props => {\n  console.log(props);\n  const facing = props.facing;\n  const getPercent = stateVal => {\n    try {\n      let valStr = (stateVal + '-').split('-')[0];\n      return Math.round((valStr.split('1').length - 1 / valStr.length) * 10) + '%';\n    } catch (err) {\n      return 'NA';\n    }\n  };\n  var prodPercentage = getPercent(facing.state);\n  var prodImage;\n  try {\n    prodImage = require('../imgs/' + facing.productUPC + '.png');\n  } catch (err) {\n    prodImage = require('../imgs/blackbox.png');\n    console.log(\"image not found error trapped\");\n  }\n  var percentageStyle = getPercentStyle(prodPercentage);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"facing-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"facing-info__upc\",\n      src: prodImage,\n      alt: \"ProductImg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"percentage\",\n      children: [/*#__PURE__*/_jsxDEV(\"style\", {\n        children: [\"p \", width = {\n          prodPercentage\n        }]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"color\",\n        style: \"width: prodPercentage; background-color:percentageStyle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_c = Facing;\nexport default Facing;\nvar _c;\n$RefreshReg$(_c, \"Facing\");","map":{"version":3,"names":["React","getPercentStyle","percent","styleObj","backgroundColor","getPercentColor","red","orange","yellow","white","green","purple","isNaN","Facing","props","console","log","facing","getPercent","stateVal","valStr","split","Math","round","length","err","prodPercentage","state","prodImage","require","productUPC","percentageStyle","width"],"sources":["/Users/kevinchen/Desktop/LPOGWebApp/src/components/Facing.js"],"sourcesContent":["import React from 'react';\nimport './Facing.css';\n\nconst getPercentStyle = (percent) => {\n  let styleObj = { backgroundColor: ''  };\n  //alert(getPercentColor(percent))\n  styleObj.backgroundColor = getPercentColor(percent);\n  return styleObj;\n};\n\n\nexport const getPercentColor = (percent) => {\n  //alert(\"percent=\"+percent)\n  let red = '#ff0000';\n  let orange = '#ff9900';\n  let yellow = '#fdfa06';\n  let white = '#ffffff';\n  let green = '#00ff00';\n  let purple = '#ff00ff';\n\n  if (isNaN(percent) || percent > 90){\n    \n    return white;\n  } \n  \n  if (percent > 80) {\n    \n    return purple;\n  }\n\n  if (percent > 60) {\n    \n    return green;\n  }\n\n  if (percent > 40) {\n   \n    return yellow;\n  }\n\n  if (percent > 20) {\n    \n    return orange;\n  }\n  \n  return red;\n};\n\nconst Facing = (props) => {\nconsole.log(props)\nconst facing = props.facing \n\nconst getPercent = (stateVal) => {\n  try {\n    let valStr = (stateVal + '-').split('-')[0];\n    return (\n      Math.round((valStr.split('1').length - 1 / valStr.length) * 10) + '%'\n    );\n  } catch (err) {\n    return ( 'NA');\n  }\n};\nvar prodPercentage = getPercent(facing.state) \n\nvar prodImage\n\ntry{\n  prodImage = require('../imgs/'+ facing.productUPC+'.png')\n}catch(err){\n  prodImage = require('../imgs/blackbox.png')\n  console.log(\"image not found error trapped\")\n}\n\n\nvar percentageStyle = getPercentStyle(prodPercentage);\n\n\n\n\n\nreturn (\n    <li className=\"facing-info\">\n    <img  \n         className=\"facing-info__upc\" \n         src={prodImage} \n         alt = 'ProductImg'\n    />\n  <div class=\"percentage\">\n    <style>\n      p {width={prodPercentage}}\n    </style>\n  <div class=\"color\" style = \"width: prodPercentage; background-color:percentageStyle\"  ></div>\n  </div>\n\n    </li>\n);\n\n\n\n\n};\nexport default Facing;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AAAC;AAEtB,MAAMC,eAAe,GAAIC,OAAO,IAAK;EACnC,IAAIC,QAAQ,GAAG;IAAEC,eAAe,EAAE;EAAI,CAAC;EACvC;EACAD,QAAQ,CAACC,eAAe,GAAGC,eAAe,CAACH,OAAO,CAAC;EACnD,OAAOC,QAAQ;AACjB,CAAC;AAGD,OAAO,MAAME,eAAe,GAAIH,OAAO,IAAK;EAC1C;EACA,IAAII,GAAG,GAAG,SAAS;EACnB,IAAIC,MAAM,GAAG,SAAS;EACtB,IAAIC,MAAM,GAAG,SAAS;EACtB,IAAIC,KAAK,GAAG,SAAS;EACrB,IAAIC,KAAK,GAAG,SAAS;EACrB,IAAIC,MAAM,GAAG,SAAS;EAEtB,IAAIC,KAAK,CAACV,OAAO,CAAC,IAAIA,OAAO,GAAG,EAAE,EAAC;IAEjC,OAAOO,KAAK;EACd;EAEA,IAAIP,OAAO,GAAG,EAAE,EAAE;IAEhB,OAAOS,MAAM;EACf;EAEA,IAAIT,OAAO,GAAG,EAAE,EAAE;IAEhB,OAAOQ,KAAK;EACd;EAEA,IAAIR,OAAO,GAAG,EAAE,EAAE;IAEhB,OAAOM,MAAM;EACf;EAEA,IAAIN,OAAO,GAAG,EAAE,EAAE;IAEhB,OAAOK,MAAM;EACf;EAEA,OAAOD,GAAG;AACZ,CAAC;AAED,MAAMO,MAAM,GAAIC,KAAK,IAAK;EAC1BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,MAAMG,MAAM,GAAGH,KAAK,CAACG,MAAM;EAE3B,MAAMC,UAAU,GAAIC,QAAQ,IAAK;IAC/B,IAAI;MACF,IAAIC,MAAM,GAAG,CAACD,QAAQ,GAAG,GAAG,EAAEE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC3C,OACEC,IAAI,CAACC,KAAK,CAAC,CAACH,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAACG,MAAM,GAAG,CAAC,GAAGJ,MAAM,CAACI,MAAM,IAAI,EAAE,CAAC,GAAG,GAAG;IAEzE,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,OAAS,IAAI;IACf;EACF,CAAC;EACD,IAAIC,cAAc,GAAGR,UAAU,CAACD,MAAM,CAACU,KAAK,CAAC;EAE7C,IAAIC,SAAS;EAEb,IAAG;IACDA,SAAS,GAAGC,OAAO,CAAC,UAAU,GAAEZ,MAAM,CAACa,UAAU,GAAC,MAAM,CAAC;EAC3D,CAAC,QAAML,GAAG,EAAC;IACTG,SAAS,GAAGC,OAAO,CAAC,sBAAsB,CAAC;IAC3Cd,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;EAC9C;EAGA,IAAIe,eAAe,GAAG9B,eAAe,CAACyB,cAAc,CAAC;EAMrD,oBACI;IAAI,SAAS,EAAC,aAAa;IAAA,wBAC3B;MACK,SAAS,EAAC,kBAAkB;MAC5B,GAAG,EAAEE,SAAU;MACf,GAAG,EAAG;IAAY;MAAA;MAAA;MAAA;IAAA,QACrB,eACJ;MAAK,KAAK,EAAC,YAAY;MAAA,wBACrB;QAAA,iBACKI,KAAK,GAAC;UAACN;QAAc,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACnB,eACV;QAAK,KAAK,EAAC,OAAO;QAAC,KAAK,EAAG;MAAyD;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACvF;EAAA;IAAA;IAAA;IAAA;EAAA,QAEC;AAMT,CAAC;AAAC,KApDIb,MAAM;AAqDZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}