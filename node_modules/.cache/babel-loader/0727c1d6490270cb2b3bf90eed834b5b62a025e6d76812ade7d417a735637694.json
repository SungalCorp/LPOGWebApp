{"ast":null,"code":"var _jsxFileName = \"/Users/kevinchen/Documents/Projects/LPOGWebApp/src/components/ErrorBoundary.js\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true,\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service like AppSignal\n    // logErrorToMyService(error, errorInfo);\n    // console.log(\"Something Went Wrong!\",error)\n  }\n  render() {\n    const {\n      hasError,\n      error\n    } = this.state;\n    if (hasError) {\n      // You can render any custom fallback UI\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Something went wrong \\uD83D\\uDE2D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), error.message && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Here's the error: \", error.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this);\n    }\n    return this.props.children;\n  }\n}\nexport default ErrorBoundary;","map":{"version":3,"names":["Component","ErrorBoundary","constructor","props","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","render","message","children"],"sources":["/Users/kevinchen/Documents/Projects/LPOGWebApp/src/components/ErrorBoundary.js"],"sourcesContent":["import { Component } from \"react\";\n \nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n \n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true,\n      error,\n    };\n  }\n \n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service like AppSignal\n    // logErrorToMyService(error, errorInfo);\n    // console.log(\"Something Went Wrong!\",error)\n  }\n \n  render() {\n    const { hasError, error } = this.state;\n \n    if (hasError) {\n      // You can render any custom fallback UI\n      return (\n        <div>\n          <p>Something went wrong ðŸ˜­</p>\n \n          {error.message && <span>Here's the error: {error.message}</span>}\n        </div>\n      );\n    }\n \n    return this.props.children;\n  }\n}\n \nexport default ErrorBoundary;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAAC;AAElC,MAAMC,aAAa,SAASD,SAAS,CAAC;EACpCE,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MAAEC,QAAQ,EAAE;IAAM,CAAC;EAClC;EAEA,OAAOC,wBAAwB,CAACC,KAAK,EAAE;IACrC;IACA,OAAO;MACLF,QAAQ,EAAE,IAAI;MACdE;IACF,CAAC;EACH;EAEAC,iBAAiB,CAACD,KAAK,EAAEE,SAAS,EAAE;IAClC;IACA;IACA;EAAA;EAGFC,MAAM,GAAG;IACP,MAAM;MAAEL,QAAQ;MAAEE;IAAM,CAAC,GAAG,IAAI,CAACH,KAAK;IAEtC,IAAIC,QAAQ,EAAE;MACZ;MACA,oBACE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA8B,EAE7BE,KAAK,CAACI,OAAO,iBAAI;UAAA,iCAAyBJ,KAAK,CAACI,OAAO;QAAA;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5D;IAEV;IAEA,OAAO,IAAI,CAACR,KAAK,CAACS,QAAQ;EAC5B;AACF;AAEA,eAAeX,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}