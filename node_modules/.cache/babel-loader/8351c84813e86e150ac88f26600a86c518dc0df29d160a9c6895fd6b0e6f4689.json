{"ast":null,"code":"var _jsxFileName = \"/Users/kevinchen/Documents/Projects/LPOGWebApp/src/components/Facing.js\";\nimport React from 'react';\nimport './Facing.css';\nimport Tooltip from \"./Tooltip\";\nimport 'react-tooltip/dist/react-tooltip.css';\n// import { ErrorBoundary } from \"react-error-boundary\";\nimport ErrorBoundary from './ErrorBoundary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageScalerShelfWidth = 48;\n// const imageScalerShelfHeight = 12\n\nconst getPercentStyle = percent => {\n  let styleObj = {\n    backgroundColor: ''\n  };\n  //alert(getPercentColor(percent))\n  styleObj.backgroundColor = getPercentColor(percent);\n  return styleObj;\n};\nconst getProductImageStyle = facing => {\n  let styleObj = {\n    width: '',\n    height: ''\n  };\n  styleObj.width = 95 * (facing.productWidth / imageScalerShelfWidth) + 'vw';\n  // styleObj.height = 100*(facing.productHeight/imageScalerShelfHeight)+'%';\n  return styleObj;\n};\nexport const getPercentColor = percent => {\n  //alert(\"percent=\"+percent)\n  percent = percent.replace(/%/g, '');\n  let red = '#ff0000';\n  let orange = '#ff9900';\n  let yellow = '#fdfa06';\n  let blue = '#0000FF';\n  let green = '#00ff00';\n  let purple = '#ff00ff';\n  if (isNaN(percent) || percent > 90) {\n    return purple;\n  }\n  if (percent > 85) {\n    return blue;\n  }\n  if (percent > 55) {\n    return green;\n  }\n  if (percent > 35) {\n    return yellow;\n  }\n  if (percent > 20) {\n    return orange;\n  }\n  return red;\n};\nconst Facing = props => {\n  console.log(props);\n  const facing = props.facing;\n  const getPercent = stateVal => {\n    try {\n      let valStr = (stateVal + '-').split('-')[0];\n      return Math.round((valStr.split('1').length - 1 / valStr.length) * 10) + '%';\n    } catch (err) {\n      return 'NA';\n    }\n  };\n  var prodPercentage = getPercent(facing.state);\n  var prodImage = 'https://imgserver.sungalcorp.synology.me/' + facing.productUPC + '.png';\n\n  // const fetchImg = async () => {\n\n  // try{\n  //   // prodImage = require('../imgs/'+facing.productUPC+'.png')\n  //   var prodImage = 'https://imgserver.sungalcorp.synology.me/'+facing.productUPC+'.png';\n  //   // var prodImage = fetch('https://imgserver.sungalcorp.synology.me/'+facing.productUPC+'.png');\n\n  // }catch(err){\n  //   // prodImage = require('../imgs/blackbox.png');\n  //   // prodImage = '../src/blackbox.png';\n  //   // prodImage = 'https://imgserver.sungalcorp.synology.me/blackbox.png'\n  //   console.log(\"image not found error trapped\")\n  //   return err;\n  // };\n  // };\n\n  var percentageStyle = getPercentStyle(prodPercentage);\n  var productImageStyle = getProductImageStyle(facing);\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(Tooltip, {\n      content: facing.productName + \"     UPC:\" + facing.productUPC,\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"facing\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"facing_img\",\n          src: prodImage,\n          alt: \"ProductImg\",\n          style: productImageStyle,\n          onError: e => {\n            e.target.src = \"https://imgserver.sungalcorp.synology.me/blackbox.png\";\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"percentage-tag\",\n          style: percentageStyle,\n          children: prodPercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 1\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 3\n  }, this);\n};\n_c = Facing;\nexport default Facing;\nvar _c;\n$RefreshReg$(_c, \"Facing\");","map":{"version":3,"names":["React","Tooltip","ErrorBoundary","imageScalerShelfWidth","getPercentStyle","percent","styleObj","backgroundColor","getPercentColor","getProductImageStyle","facing","width","height","productWidth","replace","red","orange","yellow","blue","green","purple","isNaN","Facing","props","console","log","getPercent","stateVal","valStr","split","Math","round","length","err","prodPercentage","state","prodImage","productUPC","percentageStyle","productImageStyle","productName","e","target","src","index"],"sources":["/Users/kevinchen/Documents/Projects/LPOGWebApp/src/components/Facing.js"],"sourcesContent":["import React from 'react';\nimport './Facing.css';\nimport Tooltip from \"./Tooltip\";\nimport 'react-tooltip/dist/react-tooltip.css';\n// import { ErrorBoundary } from \"react-error-boundary\";\nimport ErrorBoundary from './ErrorBoundary';\n\n\nconst imageScalerShelfWidth = 48;\n// const imageScalerShelfHeight = 12\n\nconst getPercentStyle = (percent) => {\n  let styleObj = { backgroundColor: '',\n   };\n  //alert(getPercentColor(percent))\n  styleObj.backgroundColor = getPercentColor(percent);\n  return styleObj;\n};\nconst getProductImageStyle = (facing) => {\n  let styleObj = { width: '', height: ''}\n  styleObj.width = 95*(facing.productWidth /imageScalerShelfWidth)+'vw';\n  // styleObj.height = 100*(facing.productHeight/imageScalerShelfHeight)+'%';\n  return styleObj;\n}\nexport const getPercentColor = (percent) => {\n  //alert(\"percent=\"+percent)\n  percent = percent.replace(/%/g, '');\n  let red = '#ff0000';\n  let orange = '#ff9900';\n  let yellow = '#fdfa06';\n  let blue = '#0000FF';\n  let green = '#00ff00';\n  let purple = '#ff00ff';\n  if (isNaN(percent) || percent > 90){\n    return purple;\n  } \n  if (percent > 85) {\n    return blue;\n  }\n  if (percent > 55) {\n    return green;\n  }\n  if (percent > 35) {\n    return yellow;\n  }\n  if (percent > 20) {\n    return orange;\n  }\n  return red;\n};\n\nconst Facing = (props) => {\nconsole.log(props)\nconst facing = props.facing \n\nconst getPercent = (stateVal) => {\n  try {\n    let valStr = (stateVal + '-').split('-')[0];\n    return (\n      Math.round((valStr.split('1').length - 1 / valStr.length) * 10) + '%'\n    );\n  } catch (err) {\n    return ('NA');\n  }\n};\n\nvar prodPercentage = getPercent(facing.state) \n\nvar prodImage = 'https://imgserver.sungalcorp.synology.me/'+facing.productUPC+'.png';\n\n\n\n// const fetchImg = async () => {\n\n// try{\n//   // prodImage = require('../imgs/'+facing.productUPC+'.png')\n//   var prodImage = 'https://imgserver.sungalcorp.synology.me/'+facing.productUPC+'.png';\n//   // var prodImage = fetch('https://imgserver.sungalcorp.synology.me/'+facing.productUPC+'.png');\n\n// }catch(err){\n//   // prodImage = require('../imgs/blackbox.png');\n//   // prodImage = '../src/blackbox.png';\n//   // prodImage = 'https://imgserver.sungalcorp.synology.me/blackbox.png'\n//   console.log(\"image not found error trapped\")\n//   return err;\n// };\n// };\n\nvar percentageStyle = getPercentStyle(prodPercentage);\nvar productImageStyle = getProductImageStyle(facing);\nreturn (\n  <ErrorBoundary key={index}>\n\n<Tooltip content={facing.productName+\"     UPC:\"+facing.productUPC}>\n      <li className=\"facing\"  >\n        <img  \n            className=\"facing_img\" \n            src={prodImage} \n            alt = 'ProductImg'\n            style={productImageStyle}\n            onError={(e) =>\n                {e.target.src =\n                   \"https://imgserver.sungalcorp.synology.me/blackbox.png\"}\n            }\n        />\n\n        <div className=\"percentage-tag\" style={percentageStyle}>\n          {prodPercentage}\n        </div>\n      </li>\n  </Tooltip>\n  </ErrorBoundary>\n\n);\n};\nexport default Facing;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}