{"ast":null,"code":"var _jsxFileName = \"/Users/kevinchen/Documents/Projects/LPOGWebApp /src/lib/StyleFunctions.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageScalerShelfWidth = 48;\n// const imageScalerShelfHeight = 12\n\nexport const getPercent = stateVal => {\n  try {\n    let valStr = (stateVal + '-').split('-')[0];\n    return Math.round((valStr.split('1').length - 1 / valStr.length) * 10) + '%';\n  } catch (err) {\n    return 'NA';\n  }\n};\nexport const getPercentColor = percent => {\n  //alert(\"percent=\"+percent)\n  percent = percent.replace(/%/g, '');\n  let red = '#ff0000';\n  let orange = '#ff9900';\n  let yellow = '#fdfa06';\n  let white = '#ffffff';\n  let green = '#00ff00';\n  let purple = '#ff00ff';\n  if (isNaN(percent) || percent > 90) {\n    return white;\n  }\n  if (percent > 80) {\n    return purple;\n  }\n  if (percent > 60) {\n    return green;\n  }\n  if (percent > 40) {\n    return yellow;\n  }\n  if (percent > 20) {\n    return orange;\n  }\n  return red;\n};\nexport const getPercentStyle = percent => {\n  let styleObj = {\n    backgroundColor: ''\n  };\n  //alert(getPercentColor(percent))\n  styleObj.backgroundColor = getPercentColor(percent);\n  return styleObj;\n};\nexport const getProductImageStyle = facing => {\n  let styleObj = {\n    width: '',\n    height: ''\n  };\n  styleObj.width = 75 * (facing.productWidth / imageScalerShelfWidth) + 'vw';\n  // styleObj.height = 100*(facing.productHeight/imageScalerShelfHeight)+'%';\n  return styleObj;\n};\nexport const colorBarNotice = percent => {\n  const barStyle = {\n    backgroundColor: getPercentColor(percent),\n    height: '10px',\n    width: `3vw`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: barStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        marginLeft: '10px'\n      },\n      children: [percent, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this);\n};","map":{"version":3,"names":["imageScalerShelfWidth","getPercent","stateVal","valStr","split","Math","round","length","err","getPercentColor","percent","replace","red","orange","yellow","white","green","purple","isNaN","getPercentStyle","styleObj","backgroundColor","getProductImageStyle","facing","width","height","productWidth","colorBarNotice","barStyle","display","alignItems","marginLeft"],"sources":["/Users/kevinchen/Documents/Projects/LPOGWebApp /src/lib/StyleFunctions.js"],"sourcesContent":["const imageScalerShelfWidth = 48;\n// const imageScalerShelfHeight = 12\n\nexport const getPercent = (stateVal) => {\n    try {\n      let valStr = (stateVal + '-').split('-')[0];\n      return (\n        Math.round((valStr.split('1').length - 1 / valStr.length) * 10) + '%'\n      );\n    } catch (err) {\n      return ('NA');\n    }\n  };\n\nexport const getPercentColor = (percent) => {\n    //alert(\"percent=\"+percent)\n    percent = percent.replace(/%/g, '');\n    let red = '#ff0000';\n    let orange = '#ff9900';\n    let yellow = '#fdfa06';\n    let white = '#ffffff';\n    let green = '#00ff00';\n    let purple = '#ff00ff';\n  \n    if (isNaN(percent) || percent > 90){\n      \n      return white;\n    } \n    \n    if (percent > 80) {\n      \n      return purple;\n    }\n  \n    if (percent > 60) {\n      \n      return green;\n    }\n  \n    if (percent > 40) {\n     \n      return yellow;\n    }\n  \n    if (percent > 20) {\n      \n      return orange;\n    }\n    \n    return red;\n  };\n\nexport const getPercentStyle = (percent) => {\n    let styleObj = { backgroundColor: ''\n     };\n    //alert(getPercentColor(percent))\n    styleObj.backgroundColor = getPercentColor(percent);\n    return styleObj;\n  };\n\nexport const getProductImageStyle = (facing) => {\n    let styleObj = { width: '', height: ''}\n    styleObj.width = 75*(facing.productWidth /imageScalerShelfWidth)+'vw';\n    // styleObj.height = 100*(facing.productHeight/imageScalerShelfHeight)+'%';\n    return styleObj;\n  }\n\n\n\nexport const colorBarNotice =(percent) => {\n    const barStyle = {\n      backgroundColor: getPercentColor(percent),\n      height: '10px',\n      width: `3vw`,\n    };\n  \n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <div style={barStyle}></div>\n        <span style={{ marginLeft: '10px' }}>{percent}%</span>\n      </div>\n    );\n  }\n  "],"mappings":";;AAAA,MAAMA,qBAAqB,GAAG,EAAE;AAChC;;AAEA,OAAO,MAAMC,UAAU,GAAIC,QAAQ,IAAK;EACpC,IAAI;IACF,IAAIC,MAAM,GAAG,CAACD,QAAQ,GAAG,GAAG,EAAEE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,OACEC,IAAI,CAACC,KAAK,CAAC,CAACH,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAACG,MAAM,GAAG,CAAC,GAAGJ,MAAM,CAACI,MAAM,IAAI,EAAE,CAAC,GAAG,GAAG;EAEzE,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,OAAQ,IAAI;EACd;AACF,CAAC;AAEH,OAAO,MAAMC,eAAe,GAAIC,OAAO,IAAK;EACxC;EACAA,OAAO,GAAGA,OAAO,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;EACnC,IAAIC,GAAG,GAAG,SAAS;EACnB,IAAIC,MAAM,GAAG,SAAS;EACtB,IAAIC,MAAM,GAAG,SAAS;EACtB,IAAIC,KAAK,GAAG,SAAS;EACrB,IAAIC,KAAK,GAAG,SAAS;EACrB,IAAIC,MAAM,GAAG,SAAS;EAEtB,IAAIC,KAAK,CAACR,OAAO,CAAC,IAAIA,OAAO,GAAG,EAAE,EAAC;IAEjC,OAAOK,KAAK;EACd;EAEA,IAAIL,OAAO,GAAG,EAAE,EAAE;IAEhB,OAAOO,MAAM;EACf;EAEA,IAAIP,OAAO,GAAG,EAAE,EAAE;IAEhB,OAAOM,KAAK;EACd;EAEA,IAAIN,OAAO,GAAG,EAAE,EAAE;IAEhB,OAAOI,MAAM;EACf;EAEA,IAAIJ,OAAO,GAAG,EAAE,EAAE;IAEhB,OAAOG,MAAM;EACf;EAEA,OAAOD,GAAG;AACZ,CAAC;AAEH,OAAO,MAAMO,eAAe,GAAIT,OAAO,IAAK;EACxC,IAAIU,QAAQ,GAAG;IAAEC,eAAe,EAAE;EACjC,CAAC;EACF;EACAD,QAAQ,CAACC,eAAe,GAAGZ,eAAe,CAACC,OAAO,CAAC;EACnD,OAAOU,QAAQ;AACjB,CAAC;AAEH,OAAO,MAAME,oBAAoB,GAAIC,MAAM,IAAK;EAC5C,IAAIH,QAAQ,GAAG;IAAEI,KAAK,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAE,CAAC;EACvCL,QAAQ,CAACI,KAAK,GAAG,EAAE,IAAED,MAAM,CAACG,YAAY,GAAE1B,qBAAqB,CAAC,GAAC,IAAI;EACrE;EACA,OAAOoB,QAAQ;AACjB,CAAC;AAIH,OAAO,MAAMO,cAAc,GAAGjB,OAAO,IAAK;EACtC,MAAMkB,QAAQ,GAAG;IACfP,eAAe,EAAEZ,eAAe,CAACC,OAAO,CAAC;IACzCe,MAAM,EAAE,MAAM;IACdD,KAAK,EAAG;EACV,CAAC;EAED,oBACE;IAAK,KAAK,EAAE;MAAEK,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAA,wBACpD;MAAK,KAAK,EAAEF;IAAS;MAAA;MAAA;MAAA;IAAA,QAAO,eAC5B;MAAM,KAAK,EAAE;QAAEG,UAAU,EAAE;MAAO,CAAE;MAAA,WAAErB,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAClD;AAEV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}