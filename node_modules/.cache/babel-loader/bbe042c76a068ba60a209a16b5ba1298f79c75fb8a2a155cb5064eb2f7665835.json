{"ast":null,"code":"var _jsxFileName = \"/Users/kevinchen/Desktop/LPOGWebApp/src/components/Facing.js\";\nimport React from 'react';\nimport './Facing.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Facing = props => {\n  console.log(props);\n  const facing = props.facing;\n  const getPercent = stateVal => {\n    try {\n      let valStr = (stateVal + '-').split('-')[0];\n      return Math.round((valStr.split('1').length - 1 / valStr.length) * 10) + '%';\n    } catch (err) {\n      return 'NA';\n    }\n  };\n  getPercent(facing.state);\n  const facingLength = facing.state.split(/[\\s-]+/)[0].match(/1/g || []).length;\n  const itemLength = facing.state.split(/[\\s-]+/)[0].length;\n  console.log(facingLength);\n  console.log(itemLength);\n  const emptyFacing = '0%';\n  var prodImage;\n  var prodPercentage = 100 * itemLength / facingLength;\n  console.log(prodPercentage);\n  try {\n    prodImage = require('../imgs/' + facing.productUPC + '.png');\n  } catch (err) {\n    prodImage = require('../imgs/blackbox.png');\n    console.log(\"image not found error trapped\");\n  }\n  try {\n    prodPercentage = require(prodPercentage + '%');\n  } catch (err) {\n    prodPercentage = require(emptyFacing);\n    console.log(\"image not found error trapped\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"facing-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"facing-info__upc\",\n      src: prodImage,\n      alt: \"ProductImg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"percentage\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"color\",\n        children: prodPercentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_c = Facing;\nexport default Facing;\nvar _c;\n$RefreshReg$(_c, \"Facing\");","map":{"version":3,"names":["React","Facing","props","console","log","facing","getPercent","stateVal","valStr","split","Math","round","length","err","state","facingLength","match","itemLength","emptyFacing","prodImage","prodPercentage","require","productUPC"],"sources":["/Users/kevinchen/Desktop/LPOGWebApp/src/components/Facing.js"],"sourcesContent":["import React from 'react';\nimport './Facing.css';\n\nconst Facing = (props) => {\nconsole.log(props)\nconst facing = props.facing \n\nconst getPercent = (stateVal) => {\n  try {\n    let valStr = (stateVal + '-').split('-')[0];\n    return (\n      Math.round((valStr.split('1').length - 1 / valStr.length) * 10) + '%'\n    );\n  } catch (err) {\n    return ( 'NA');\n  }\n};\ngetPercent(facing.state)\n\nconst facingLength = ((facing.state.split(/[\\s-]+/)[0]).match((/1/g)||[]).length)\nconst itemLength = ((facing.state.split(/[\\s-]+/)[0]).length)\nconsole.log(facingLength)\nconsole.log(itemLength)\n\nconst emptyFacing = '0%'\n\nvar prodImage\nvar prodPercentage =  (100 * itemLength) / facingLength\nconsole.log(prodPercentage)\n\ntry{\n  prodImage = require('../imgs/'+ facing.productUPC+'.png')\n}catch(err){\n  prodImage = require('../imgs/blackbox.png')\n  console.log(\"image not found error trapped\")\n}\n\ntry{\n  prodPercentage = require(prodPercentage+'%')\n}catch(err){\n  prodPercentage = require(emptyFacing)\n  console.log(\"image not found error trapped\")\n}\n\nreturn (\n    <li className=\"facing-info\">\n    <img  \n         className=\"facing-info__upc\" \n         src={prodImage} \n         alt = 'ProductImg'\n    />\n  <div class=\"percentage\">\n  <div class=\"color\" >{prodPercentage}</div>\n  </div>\n    </li>\n);\n\n\n\n\n};\nexport default Facing;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AAAC;AAEtB,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAC1BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,MAAMG,MAAM,GAAGH,KAAK,CAACG,MAAM;EAE3B,MAAMC,UAAU,GAAIC,QAAQ,IAAK;IAC/B,IAAI;MACF,IAAIC,MAAM,GAAG,CAACD,QAAQ,GAAG,GAAG,EAAEE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC3C,OACEC,IAAI,CAACC,KAAK,CAAC,CAACH,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAACG,MAAM,GAAG,CAAC,GAAGJ,MAAM,CAACI,MAAM,IAAI,EAAE,CAAC,GAAG,GAAG;IAEzE,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,OAAS,IAAI;IACf;EACF,CAAC;EACDP,UAAU,CAACD,MAAM,CAACS,KAAK,CAAC;EAExB,MAAMC,YAAY,GAAKV,MAAM,CAACS,KAAK,CAACL,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAEO,KAAK,CAAE,IAAI,IAAG,EAAE,CAAC,CAACJ,MAAO;EACjF,MAAMK,UAAU,GAAKZ,MAAM,CAACS,KAAK,CAACL,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAEG,MAAO;EAC7DT,OAAO,CAACC,GAAG,CAACW,YAAY,CAAC;EACzBZ,OAAO,CAACC,GAAG,CAACa,UAAU,CAAC;EAEvB,MAAMC,WAAW,GAAG,IAAI;EAExB,IAAIC,SAAS;EACb,IAAIC,cAAc,GAAK,GAAG,GAAGH,UAAU,GAAIF,YAAY;EACvDZ,OAAO,CAACC,GAAG,CAACgB,cAAc,CAAC;EAE3B,IAAG;IACDD,SAAS,GAAGE,OAAO,CAAC,UAAU,GAAEhB,MAAM,CAACiB,UAAU,GAAC,MAAM,CAAC;EAC3D,CAAC,QAAMT,GAAG,EAAC;IACTM,SAAS,GAAGE,OAAO,CAAC,sBAAsB,CAAC;IAC3ClB,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;EAC9C;EAEA,IAAG;IACDgB,cAAc,GAAGC,OAAO,CAACD,cAAc,GAAC,GAAG,CAAC;EAC9C,CAAC,QAAMP,GAAG,EAAC;IACTO,cAAc,GAAGC,OAAO,CAACH,WAAW,CAAC;IACrCf,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;EAC9C;EAEA,oBACI;IAAI,SAAS,EAAC,aAAa;IAAA,wBAC3B;MACK,SAAS,EAAC,kBAAkB;MAC5B,GAAG,EAAEe,SAAU;MACf,GAAG,EAAG;IAAY;MAAA;MAAA;MAAA;IAAA,QACrB,eACJ;MAAK,KAAK,EAAC,YAAY;MAAA,uBACvB;QAAK,KAAK,EAAC,OAAO;QAAA,UAAGC;MAAc;QAAA;QAAA;QAAA;MAAA;IAAO;MAAA;MAAA;MAAA;IAAA,QACpC;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAMT,CAAC;AAAC,KAzDInB,MAAM;AA0DZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}